import type { OnChanges } from '@angular/core';
import { EventEmitter } from '@angular/core';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/textfield";
export declare class TuiInputSearch implements OnChanges {
    private readonly template?;
    private readonly container?;
    private readonly el;
    private readonly service;
    private readonly textfield;
    private readonly i18n;
    private parent;
    private neighbor;
    private placeholder;
    private ref?;
    protected readonly icon: import("@angular/core").WritableSignal<string>;
    tuiInputSearch: PolymorpheusContent;
    tuiInputSearchOpen: boolean;
    readonly tuiInputSearchOpenChange: EventEmitter<boolean>;
    ngOnChanges(): void;
    open(): void;
    close(): void;
    protected onArrow(): void;
    protected onFocus({ target }: Event): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputSearch, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputSearch, "input[tuiInputSearch]", never, { "tuiInputSearch": { "alias": "tuiInputSearch"; "required": false; }; "tuiInputSearchOpen": { "alias": "tuiInputSearchOpen"; "required": false; }; }, { "tuiInputSearchOpenChange": "tuiInputSearchOpenChange"; }, never, never, true, [{ directive: typeof i1.TuiWithTextfield; inputs: {}; outputs: {}; }]>;
}
