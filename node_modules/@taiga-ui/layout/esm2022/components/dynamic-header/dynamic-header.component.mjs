import { NgForOf, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { TuiAnimated } from '@taiga-ui/cdk/directives/animated';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import { TuiDynamicHeaderContainerDirective } from './dynamic-header-container.directive';
import * as i0 from "@angular/core";
class TuiDynamicHeaderComponent {
    constructor() {
        this.container = inject(TuiDynamicHeaderContainerDirective);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDynamicHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDynamicHeaderComponent, isStandalone: true, selector: "[tuiDynamicHeader]", host: { properties: { "style.--t-dir": "container.scrollDir() || -1" } }, ngImport: i0, template: `
        <div
            *ngIf="!container.hiddenHeaders().length; else dynamic"
            tuiAnimated
        >
            <ng-content />
        </div>
        <ng-template #dynamic>
            <ng-container
                *ngFor="let header of container.hiddenHeaders(); let last = last"
            >
                <div
                    *ngIf="last"
                    tuiAnimated
                >
                    <div *polymorpheusOutlet="header as text">{{ text }}</div>
                </div>
            </ng-container>
        </ng-template>
    `, isInline: true, styles: [":host{display:flex;block-size:100%;align-items:center;justify-content:center}:host-context([data-platform=\"android\"]) :host{justify-content:start}.tui-enter{animation-name:tuiFade,tuiSlide;--tui-from: translateY(calc(-200% * var(--t-dir)))}.tui-leave{animation-name:tuiFade,tuiSlide;--tui-from: translateY(calc(200% * var(--t-dir)))}.tui-enter:not(:first-of-type),.tui-leave:not(:first-of-type){position:absolute}\n"], dependencies: [{ kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: TuiAnimated, selector: "[tuiAnimated]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiDynamicHeaderComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDynamicHeaderComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: '[tuiDynamicHeader]', imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiAnimated], template: `
        <div
            *ngIf="!container.hiddenHeaders().length; else dynamic"
            tuiAnimated
        >
            <ng-content />
        </div>
        <ng-template #dynamic>
            <ng-container
                *ngFor="let header of container.hiddenHeaders(); let last = last"
            >
                <div
                    *ngIf="last"
                    tuiAnimated
                >
                    <div *polymorpheusOutlet="header as text">{{ text }}</div>
                </div>
            </ng-container>
        </ng-template>
    `, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[style.--t-dir]': 'container.scrollDir() || -1',
                    }, styles: [":host{display:flex;block-size:100%;align-items:center;justify-content:center}:host-context([data-platform=\"android\"]) :host{justify-content:start}.tui-enter{animation-name:tuiFade,tuiSlide;--tui-from: translateY(calc(-200% * var(--t-dir)))}.tui-leave{animation-name:tuiFade,tuiSlide;--tui-from: translateY(calc(200% * var(--t-dir)))}.tui-enter:not(:first-of-type),.tui-leave:not(:first-of-type){position:absolute}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGF5b3V0L2NvbXBvbmVudHMvZHluYW1pYy1oZWFkZXIvZHluYW1pYy1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQzlELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTFELE9BQU8sRUFBQyxrQ0FBa0MsRUFBQyxNQUFNLHNDQUFzQyxDQUFDOztBQUV4RixNQThCYSx5QkFBeUI7SUE5QnRDO1FBK0J1QixjQUFTLEdBQUcsTUFBTSxDQUFDLGtDQUFrQyxDQUFDLENBQUM7S0FDN0U7K0dBRlkseUJBQXlCO21HQUF6Qix5QkFBeUIsd0pBMUJ4Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQW1CVCwyZUFwQlMsT0FBTyxtSEFBRSxJQUFJLDZGQUFFLGtCQUFrQiw4SEFBRSxXQUFXOztTQTJCL0MseUJBQXlCOzRGQUF6Qix5QkFBeUI7a0JBOUJyQyxTQUFTO2lDQUNNLElBQUksWUFDTixvQkFBb0IsV0FDckIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxZQUMvQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQW1CVCxtQkFFZ0IsdUJBQXVCLENBQUMsTUFBTSxRQUN6Qzt3QkFDRixpQkFBaUIsRUFBRSw2QkFBNkI7cUJBQ25EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ0Zvck9mLCBOZ0lmfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBpbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlBbmltYXRlZH0gZnJvbSAnQHRhaWdhLXVpL2Nkay9kaXJlY3RpdmVzL2FuaW1hdGVkJztcbmltcG9ydCB7UG9seW1vcnBoZXVzT3V0bGV0fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcblxuaW1wb3J0IHtUdWlEeW5hbWljSGVhZGVyQ29udGFpbmVyRGlyZWN0aXZlfSBmcm9tICcuL2R5bmFtaWMtaGVhZGVyLWNvbnRhaW5lci5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAnW3R1aUR5bmFtaWNIZWFkZXJdJyxcbiAgICBpbXBvcnRzOiBbTmdGb3JPZiwgTmdJZiwgUG9seW1vcnBoZXVzT3V0bGV0LCBUdWlBbmltYXRlZF0sXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgKm5nSWY9XCIhY29udGFpbmVyLmhpZGRlbkhlYWRlcnMoKS5sZW5ndGg7IGVsc2UgZHluYW1pY1wiXG4gICAgICAgICAgICB0dWlBbmltYXRlZFxuICAgICAgICA+XG4gICAgICAgICAgICA8bmctY29udGVudCAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPG5nLXRlbXBsYXRlICNkeW5hbWljPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICAgICAgICpuZ0Zvcj1cImxldCBoZWFkZXIgb2YgY29udGFpbmVyLmhpZGRlbkhlYWRlcnMoKTsgbGV0IGxhc3QgPSBsYXN0XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwibGFzdFwiXG4gICAgICAgICAgICAgICAgICAgIHR1aUFuaW1hdGVkXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2ICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJoZWFkZXIgYXMgdGV4dFwiPnt7IHRleHQgfX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGAsXG4gICAgc3R5bGVVcmxzOiBbJy4vZHluYW1pYy1oZWFkZXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tzdHlsZS4tLXQtZGlyXSc6ICdjb250YWluZXIuc2Nyb2xsRGlyKCkgfHwgLTEnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUR5bmFtaWNIZWFkZXJDb21wb25lbnQge1xuICAgIHByb3RlY3RlZCByZWFkb25seSBjb250YWluZXIgPSBpbmplY3QoVHVpRHluYW1pY0hlYWRlckNvbnRhaW5lckRpcmVjdGl2ZSk7XG59XG4iXX0=