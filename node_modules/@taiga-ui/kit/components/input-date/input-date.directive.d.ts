import { TuiControl } from '@taiga-ui/cdk/classes';
import { TuiDay } from '@taiga-ui/cdk/date-time';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/textfield";
import * as i2 from "@taiga-ui/core/directives/dropdown";
import * as i3 from "./input-date.validator";
import * as i4 from "@maskito/angular";
export declare class TuiInputDateDirective extends TuiControl<TuiDay | null> {
    private readonly el;
    private readonly mobile;
    private readonly options;
    private readonly handlers;
    private readonly textfield;
    private readonly texts;
    private readonly calendar;
    protected readonly filler: import("@angular/core").Signal<string>;
    protected readonly open: import("@angular/core").WritableSignal<boolean>;
    protected readonly icon: import("@angular/core").Signal<string>;
    protected readonly dropdownEnabled: import("@angular/core").Signal<boolean>;
    protected readonly format: import("@angular/core").Signal<import("@taiga-ui/core/tokens").TuiDateFormatSettings>;
    protected readonly mask: import("@angular/core").Signal<import("@maskito/core").MaskitoOptions | null>;
    protected readonly valueEffect: import("@angular/core").EffectRef;
    protected readonly calendarIn: import("@angular/core").EffectRef;
    protected readonly calendarOut: import("@angular/core").EffectRef;
    readonly native: boolean;
    readonly min: import("@angular/core").WritableSignal<TuiDay>;
    readonly max: import("@angular/core").WritableSignal<TuiDay>;
    set minSetter(min: TuiDay | null);
    set maxSetter(max: TuiDay | null);
    protected onClick(): void;
    protected onValueChange(value: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputDateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiInputDateDirective, "input[tuiInputDate]", never, { "minSetter": { "alias": "min"; "required": false; }; "maxSetter": { "alias": "max"; "required": false; }; }, {}, never, never, true, [{ directive: typeof i1.TuiWithTextfield; inputs: {}; outputs: {}; }, { directive: typeof i2.TuiDropdownAuto; inputs: {}; outputs: {}; }, { directive: typeof i3.TuiInputDateValidator; inputs: {}; outputs: {}; }, { directive: typeof i4.MaskitoDirective; inputs: {}; outputs: {}; }]>;
}
