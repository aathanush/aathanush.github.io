import { TuiControl } from '@taiga-ui/cdk/classes';
import type { TuiStringMatcher } from '@taiga-ui/cdk/types';
import type { TuiTextfieldAccessor } from '@taiga-ui/core/components/textfield';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/textfield";
export declare class TuiComboBox<T> extends TuiControl<T | string | null> implements TuiTextfieldAccessor<T> {
    private readonly el;
    private readonly host;
    private readonly textfield;
    private readonly open;
    private readonly dropdown;
    private readonly itemsHandlers;
    private readonly datalist;
    protected readonly dropdownEnabled: import("@angular/core").Signal<boolean>;
    protected readonly valueEffect: import("@angular/core").EffectRef;
    protected readonly blurEffect: import("@angular/core").EffectRef;
    strict: boolean;
    matcher: TuiStringMatcher<T> | null;
    setValue(value: T): void;
    protected toggleDropdown(open?: boolean): void;
    protected onInput(value: string): void;
    protected keydownEnter(event: KeyboardEvent): void;
    private get options();
    private match;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiComboBox<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiComboBox<any>, "input[tuiComboBox]", never, { "strict": { "alias": "strict"; "required": false; }; "matcher": { "alias": "matcher"; "required": false; }; }, {}, never, never, true, [{ directive: typeof i1.TuiWithTextfield; inputs: {}; outputs: {}; }]>;
}
