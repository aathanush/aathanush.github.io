{"version":3,"file":"taiga-ui-kit-components-input-date.mjs","sources":["../../../projects/kit/components/input-date/input-date.options.ts","../../../projects/kit/components/input-date/input-date.validator.ts","../../../projects/kit/components/input-date/input-date.directive.ts","../../../projects/kit/components/input-date/input-date.component.ts","../../../projects/kit/components/input-date/input-date.template.html","../../../projects/kit/components/input-date/input-date.ts","../../../projects/kit/components/input-date/taiga-ui-kit-components-input-date.ts"],"sourcesContent":["import type {TuiValueTransformer} from '@taiga-ui/cdk/classes';\nimport {TUI_IDENTITY_VALUE_TRANSFORMER} from '@taiga-ui/cdk/classes';\nimport type {TuiDay} from '@taiga-ui/cdk/date-time';\nimport {TUI_FIRST_DAY, TUI_LAST_DAY} from '@taiga-ui/cdk/date-time';\nimport type {TuiHandler} from '@taiga-ui/cdk/types';\nimport {tuiCreateOptions} from '@taiga-ui/cdk/utils/di';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\n\nexport interface TuiInputDateOptionsNew {\n    readonly icon: TuiHandler<TuiSizeL | TuiSizeS, string>;\n    readonly max: TuiDay;\n    readonly min: TuiDay;\n    readonly valueTransformer: TuiValueTransformer<TuiDay | null, any>;\n}\n\nexport const TUI_INPUT_DATE_DEFAULT_OPTIONS_NEW = {\n    icon: () => '@tui.calendar',\n    min: TUI_FIRST_DAY,\n    max: TUI_LAST_DAY,\n    valueTransformer: TUI_IDENTITY_VALUE_TRANSFORMER,\n} as const;\n\nexport const [TUI_INPUT_DATE_OPTIONS_NEW, tuiInputDateOptionsProviderNew] =\n    tuiCreateOptions<TuiInputDateOptionsNew>(TUI_INPUT_DATE_DEFAULT_OPTIONS_NEW);\n","import {Directive, effect, inject} from '@angular/core';\nimport type {ValidatorFn} from '@angular/forms';\nimport {NG_VALIDATORS} from '@angular/forms';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport {TuiValidator} from '@taiga-ui/cdk/directives/validator';\nimport {tuiProvide} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiItemsHandlersDirective} from '@taiga-ui/core/directives/items-handlers';\n\n@Directive({\n    standalone: true,\n    providers: [tuiProvide(NG_VALIDATORS, TuiInputDateValidator, true)],\n})\nexport class TuiInputDateValidator extends TuiValidator {\n    private readonly handlers = inject(TuiItemsHandlersDirective);\n\n    protected readonly update = effect(() => {\n        this.handlers.disabledItemHandler();\n        this.onChange();\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    public override validate: ValidatorFn = ({value}) =>\n        value && this.handlers.disabledItemHandler()(value)\n            ? {tuiDisabledDate: value}\n            : null;\n}\n","import {computed, Directive, effect, inject, Input, signal} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {MaskitoDirective} from '@maskito/angular';\nimport type {MaskitoDateMode} from '@maskito/kit';\nimport {maskitoDateOptionsGenerator} from '@maskito/kit';\nimport {tuiAsControl, TuiControl, tuiValueTransformerFrom} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport type {TuiDateMode} from '@taiga-ui/cdk/date-time';\nimport {DATE_FILLER_LENGTH, TuiDay} from '@taiga-ui/cdk/date-time';\nimport {TUI_IS_MOBILE} from '@taiga-ui/cdk/tokens';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {\n    changeDateSeparator,\n    tuiDirectiveBinding,\n} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiCalendar} from '@taiga-ui/core/components/calendar';\nimport {\n    tuiInjectAuxiliary,\n    TuiTextfieldComponent,\n    TuiTextfieldDirective,\n    tuiTextfieldIconBinding,\n    TuiWithTextfield,\n} from '@taiga-ui/core/components/textfield';\nimport {\n    TuiDropdownAuto,\n    tuiDropdownEnabled,\n    tuiDropdownOpen,\n} from '@taiga-ui/core/directives/dropdown';\nimport {TuiItemsHandlersDirective} from '@taiga-ui/core/directives/items-handlers';\nimport {TUI_DATE_FORMAT, TUI_DEFAULT_DATE_FORMAT} from '@taiga-ui/core/tokens';\nimport {TUI_DATE_TEXTS} from '@taiga-ui/kit/tokens';\nimport {tuiMaskito} from '@taiga-ui/kit/utils';\n\nimport {TUI_INPUT_DATE_OPTIONS_NEW} from './input-date.options';\nimport {TuiInputDateValidator} from './input-date.validator';\n\nconst ADAPTER: Record<TuiDateMode, MaskitoDateMode> = {\n    DMY: 'dd/mm/yyyy',\n    MDY: 'mm/dd/yyyy',\n    YMD: 'yyyy/mm/dd',\n};\n\n@Directive({\n    standalone: true,\n    selector: 'input[tuiInputDate]',\n    providers: [\n        tuiAsControl(TuiInputDateDirective),\n        tuiValueTransformerFrom(TUI_INPUT_DATE_OPTIONS_NEW),\n    ],\n    hostDirectives: [\n        TuiWithTextfield,\n        TuiDropdownAuto,\n        TuiInputDateValidator,\n        MaskitoDirective,\n    ],\n    host: {\n        '[attr.inputmode]': 'open() ? \"none\" : \"numeric\"',\n        '[disabled]': 'disabled()',\n        '(blur)': 'onTouched()',\n        '(input)': 'onValueChange($event.target.value)',\n        '(click.capture.stop)': 'onClick()',\n    },\n})\nexport class TuiInputDateDirective extends TuiControl<TuiDay | null> {\n    private readonly el = tuiInjectElement<HTMLInputElement>();\n    private readonly mobile = inject(TUI_IS_MOBILE);\n    private readonly options = inject(TUI_INPUT_DATE_OPTIONS_NEW);\n    private readonly handlers = inject(TuiItemsHandlersDirective);\n    private readonly textfield = inject(TuiTextfieldDirective);\n    private readonly texts = toSignal(inject(TUI_DATE_TEXTS));\n    private readonly calendar = tuiInjectAuxiliary<TuiCalendar>(\n        (x) => x instanceof TuiCalendar,\n    );\n\n    protected readonly filler = tuiDirectiveBinding(\n        TuiTextfieldComponent,\n        'fillerSetter',\n        computed(() => {\n            const {mode, separator} = this.format();\n            const texts = this.texts() || '';\n\n            return texts && changeDateSeparator(texts[mode], separator);\n        }),\n        {},\n    );\n\n    protected readonly open = tuiDropdownOpen();\n    protected readonly icon = tuiTextfieldIconBinding(TUI_INPUT_DATE_OPTIONS_NEW);\n    protected readonly dropdownEnabled = tuiDropdownEnabled(\n        computed(() => !this.native && this.interactive()),\n    );\n\n    protected readonly format = toSignal(inject(TUI_DATE_FORMAT), {\n        initialValue: TUI_DEFAULT_DATE_FORMAT,\n    });\n\n    protected readonly mask = tuiMaskito(\n        computed(() =>\n            maskitoDateOptionsGenerator({\n                separator: this.format().separator,\n                mode: ADAPTER[this.format().mode],\n                min: this.min().toLocalNativeDate(),\n                max: this.max().toLocalNativeDate(),\n            }),\n        ),\n    );\n\n    protected readonly valueEffect = effect(() => {\n        const value =\n            this.value()?.toString(this.format().mode, this.format().separator) ??\n            this.el.value;\n\n        this.textfield.value.set(value);\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected readonly calendarIn = effect(() => {\n        const calendar = this.calendar();\n\n        if (!calendar) {\n            return;\n        }\n\n        calendar.value = this.value();\n        calendar.disabledItemHandler = this.handlers.disabledItemHandler();\n        calendar.min = this.min();\n        calendar.max = this.max();\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected readonly calendarOut = effect((onCleanup) => {\n        const subscription = this.calendar()?.dayClick.subscribe((day) => {\n            this.onChange(day);\n            this.open.set(false);\n        });\n\n        onCleanup(() => subscription?.unsubscribe());\n    });\n\n    public readonly native = this.el.type === 'date' && this.mobile;\n    public readonly min = signal(this.options.min);\n    public readonly max = signal(this.options.max);\n\n    @Input('min')\n    public set minSetter(min: TuiDay | null) {\n        this.min.set(min || this.options.min);\n    }\n\n    @Input('max')\n    public set maxSetter(max: TuiDay | null) {\n        this.max.set(max || this.options.max);\n    }\n\n    protected onClick(): void {\n        if (!this.mobile) {\n            this.open.update((open) => !open);\n        }\n    }\n\n    protected onValueChange(value: string): void {\n        this.control?.control?.updateValueAndValidity({emitEvent: false});\n        this.onChange(\n            value.length !== DATE_FILLER_LENGTH\n                ? null\n                : TuiDay.normalizeParse(value, this.format().mode),\n        );\n    }\n}\n","import {NgIf} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    inject,\n    Input,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {TuiDay} from '@taiga-ui/cdk/date-time';\nimport {TuiTextfieldContent} from '@taiga-ui/core/components/textfield';\n\nimport {TuiInputDateDirective} from './input-date.directive';\n\n@Component({\n    standalone: true,\n    selector: 'input[tuiInputDate][type=\"date\"]',\n    imports: [NgIf, TuiTextfieldContent],\n    templateUrl: './input-date.template.html',\n    styleUrls: ['./input-date.style.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        ngSkipHydration: 'true',\n        '[type]': '\"text\"',\n        '[attr.list]': 'null',\n    },\n})\nexport class TuiInputDateComponent {\n    protected readonly host = inject(TuiInputDateDirective);\n\n    @Input()\n    public list: string | null = null;\n\n    protected onInput(value: string): void {\n        if (!value) {\n            return this.host.onChange(null);\n        }\n\n        const [year = 0, month = 0, day = 0] = value.split('-').map(Number);\n\n        this.host.onChange(new TuiDay(year, month - 1, day));\n    }\n}\n","<ng-container *ngIf=\"host.native\">\n    <input\n        *tuiTextfieldContent\n        type=\"date\"\n        [attr.list]=\"list\"\n        [max]=\"host.max().toJSON()\"\n        [min]=\"host.min().toJSON()\"\n        [value]=\"host.value()?.toJSON()\"\n        (click.stop.zoneless)=\"(0)\"\n        (input)=\"onInput($any($event.target).value)\"\n        (pointerdown.stop.zoneless)=\"(0)\"\n    />\n</ng-container>\n","import {TuiCalendar} from '@taiga-ui/core/components/calendar';\n\nimport {TuiInputDateComponent} from './input-date.component';\nimport {TuiInputDateDirective} from './input-date.directive';\nimport {TuiInputDateValidator} from './input-date.validator';\n\nexport const TuiInputDate = [\n    TuiInputDateDirective,\n    TuiInputDateComponent,\n    TuiInputDateValidator,\n    TuiCalendar,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3.TuiInputDateValidator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAea,MAAA,kCAAkC,GAAG;AAC9C,IAAA,IAAI,EAAE,MAAM,eAAe;AAC3B,IAAA,GAAG,EAAE,aAAa;AAClB,IAAA,GAAG,EAAE,YAAY;AACjB,IAAA,gBAAgB,EAAE,8BAA8B;EACzC;AAEJ,MAAM,CAAC,0BAA0B,EAAE,8BAA8B,CAAC,GACrE,gBAAgB,CAAyB,kCAAkC;;ACf/E,MAIa,qBAAsB,SAAQ,YAAY,CAAA;AAJvD,IAAA,WAAA,GAAA;;AAKqB,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAE3C,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,MAAK;AACpC,YAAA,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB,EAAE,uBAAuB,CAAC,CAAC;AAEZ,QAAA,IAAA,CAAA,QAAQ,GAAgB,CAAC,EAAC,KAAK,EAAC,KAC5C,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,KAAK,CAAC;AAC/C,cAAE,EAAC,eAAe,EAAE,KAAK,EAAC;cACxB,IAAI,CAAC;AAClB,KAAA;+GAZY,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAArB,qBAAqB,EAAA,YAAA,EAAA,IAAA,EAAA,SAAA,EAFnB,CAAC,UAAU,CAAC,aAAa,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAE1D,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,UAAU,EAAE,IAAI;oBAChB,SAAS,EAAE,CAAC,UAAU,CAAC,aAAa,EAAyB,qBAAA,EAAA,IAAI,CAAC,CAAC;AACtE,iBAAA,CAAA;;;ACyBD,MAAM,OAAO,GAAyC;AAClD,IAAA,GAAG,EAAE,YAAY;AACjB,IAAA,GAAG,EAAE,YAAY;AACjB,IAAA,GAAG,EAAE,YAAY;CACpB,CAAC;AAEF,MAqBa,qBAAsB,SAAQ,UAAyB,CAAA;AArBpE,IAAA,WAAA,GAAA;;QAsBqB,IAAE,CAAA,EAAA,GAAG,gBAAgB,EAAoB,CAAC;AAC1C,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAC/B,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,0BAA0B,CAAC,CAAC;AAC7C,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAC7C,QAAA,IAAA,CAAA,SAAS,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC1C,IAAK,CAAA,KAAA,GAAG,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;AACzC,QAAA,IAAA,CAAA,QAAQ,GAAG,kBAAkB,CAC1C,CAAC,CAAC,KAAK,CAAC,YAAY,WAAW,CAClC,CAAC;QAEiB,IAAM,CAAA,MAAA,GAAG,mBAAmB,CAC3C,qBAAqB,EACrB,cAAc,EACd,QAAQ,CAAC,MAAK;YACV,MAAM,EAAC,IAAI,EAAE,SAAS,EAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;YAEjC,OAAO,KAAK,IAAI,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC;AAChE,SAAC,CAAC,EACF,EAAE,CACL,CAAC;QAEiB,IAAI,CAAA,IAAA,GAAG,eAAe,EAAE,CAAC;AACzB,QAAA,IAAA,CAAA,IAAI,GAAG,uBAAuB,CAAC,0BAA0B,CAAC,CAAC;AAC3D,QAAA,IAAA,CAAA,eAAe,GAAG,kBAAkB,CACnD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CACrD,CAAC;AAEiB,QAAA,IAAA,CAAA,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE;AAC1D,YAAA,YAAY,EAAE,uBAAuB;AACxC,SAAA,CAAC,CAAC;QAEgB,IAAI,CAAA,IAAA,GAAG,UAAU,CAChC,QAAQ,CAAC,MACL,2BAA2B,CAAC;AACxB,YAAA,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS;YAClC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACjC,YAAA,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,iBAAiB,EAAE;AACnC,YAAA,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,iBAAiB,EAAE;SACtC,CAAC,CACL,CACJ,CAAC;AAEiB,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,MAAK;YACzC,MAAM,KAAK,GACP,IAAI,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC;AACnE,gBAAA,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAElB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACnC,EAAE,uBAAuB,CAAC,CAAC;AAET,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,MAAK;AACxC,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEjC,IAAI,CAAC,QAAQ,EAAE;gBACX,OAAO;AACV,aAAA;AAED,YAAA,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAC9B,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;AACnE,YAAA,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC1B,YAAA,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SAC7B,EAAE,uBAAuB,CAAC,CAAC;AAET,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,CAAC,SAAS,KAAI;AAClD,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,KAAI;AAC7D,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACnB,gBAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzB,aAAC,CAAC,CAAC;YAEH,SAAS,CAAC,MAAM,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC;AACjD,SAAC,CAAC,CAAC;AAEa,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QAChD,IAAG,CAAA,GAAA,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAG,CAAA,GAAA,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AA0BlD,KAAA;IAxBG,IACW,SAAS,CAAC,GAAkB,EAAA;AACnC,QAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACzC;IAED,IACW,SAAS,CAAC,GAAkB,EAAA;AACnC,QAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACzC;IAES,OAAO,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACd,YAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AACrC,SAAA;KACJ;AAES,IAAA,aAAa,CAAC,KAAa,EAAA;AACjC,QAAA,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,sBAAsB,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;AAClE,QAAA,IAAI,CAAC,QAAQ,CACT,KAAK,CAAC,MAAM,KAAK,kBAAkB;AAC/B,cAAE,IAAI;AACN,cAAE,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CACzD,CAAC;KACL;+GArGQ,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAArB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,EAlBnB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,CAAA,KAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,CAAA,KAAA,EAAA,WAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,EAAA,aAAA,EAAA,OAAA,EAAA,oCAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,EAAA,iCAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,EAAA,SAAA,EAAA;YACP,YAAY,CAAC,qBAAqB,CAAC;YACnC,uBAAuB,CAAC,0BAA0B,CAAC;AACtD,SAAA,EAAA,eAAA,EAAA,IAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,SAAA,EAAAA,qBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAeQ,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBArBjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,SAAS,EAAE;AACP,wBAAA,YAAY,CAAuB,qBAAA,CAAA;wBACnC,uBAAuB,CAAC,0BAA0B,CAAC;AACtD,qBAAA;AACD,oBAAA,cAAc,EAAE;wBACZ,gBAAgB;wBAChB,eAAe;wBACf,qBAAqB;wBACrB,gBAAgB;AACnB,qBAAA;AACD,oBAAA,IAAI,EAAE;AACF,wBAAA,kBAAkB,EAAE,6BAA6B;AACjD,wBAAA,YAAY,EAAE,YAAY;AAC1B,wBAAA,QAAQ,EAAE,aAAa;AACvB,wBAAA,SAAS,EAAE,oCAAoC;AAC/C,wBAAA,sBAAsB,EAAE,WAAW;AACtC,qBAAA;AACJ,iBAAA,CAAA;8BAgFc,SAAS,EAAA,CAAA;sBADnB,KAAK;uBAAC,KAAK,CAAA;gBAMD,SAAS,EAAA,CAAA;sBADnB,KAAK;uBAAC,KAAK,CAAA;;;ACrIhB,MAca,qBAAqB,CAAA;AAdlC,IAAA,WAAA,GAAA;AAeuB,QAAA,IAAA,CAAA,IAAI,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAGjD,IAAI,CAAA,IAAA,GAAkB,IAAI,CAAC;AAWrC,KAAA;AATa,IAAA,OAAO,CAAC,KAAa,EAAA;QAC3B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnC,SAAA;QAED,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpE,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;KACxD;+GAdQ,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAArB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,EC3BlC,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,saAaA,EDGc,MAAA,EAAA,CAAA,6TAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAI,6FAAE,mBAAmB,EAAA,QAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;4FAW1B,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAdjC,SAAS;AACM,YAAA,IAAA,EAAA,CAAA,EAAA,UAAA,EAAA,IAAI,YACN,kCAAkC,EAAA,OAAA,EACnC,CAAC,IAAI,EAAE,mBAAmB,CAAC,EAGrB,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,eAAA,EACpB,uBAAuB,CAAC,MAAM,EACzC,IAAA,EAAA;AACF,wBAAA,eAAe,EAAE,MAAM;AACvB,wBAAA,QAAQ,EAAE,QAAQ;AAClB,wBAAA,aAAa,EAAE,MAAM;AACxB,qBAAA,EAAA,QAAA,EAAA,saAAA,EAAA,MAAA,EAAA,CAAA,6TAAA,CAAA,EAAA,CAAA;8BAMM,IAAI,EAAA,CAAA;sBADV,KAAK;;;AExBG,MAAA,YAAY,GAAG;IACxB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,WAAW;;;ACVf;;AAEG;;;;"}