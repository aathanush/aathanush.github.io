{"version":3,"file":"taiga-ui-kit-components-select.mjs","sources":["../../../projects/kit/components/select/native-select/native-select.component.ts","../../../projects/kit/components/select/native-select/native-select.template.html","../../../projects/kit/components/select/select-option/select-option.component.ts","../../../projects/kit/components/select/select.directive.ts","../../../projects/kit/components/select/select.ts","../../../projects/kit/components/select/taiga-ui-kit-components-select.ts"],"sourcesContent":["import {NgForOf, NgIf, NgTemplateOutlet} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    effect,\n    inject,\n    Input,\n    signal,\n} from '@angular/core';\nimport {tuiAsControl, TuiControl} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport {tuiIsPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiTextfieldAccessor} from '@taiga-ui/core/components/textfield';\nimport {\n    tuiAsTextfieldAccessor,\n    TuiTextfieldDirective,\n    TuiWithTextfield,\n} from '@taiga-ui/core/components/textfield';\nimport type {TuiItemsHandlers} from '@taiga-ui/core/directives/items-handlers';\nimport {TUI_ITEMS_HANDLERS} from '@taiga-ui/core/directives/items-handlers';\nimport {tuiIsFlat} from '@taiga-ui/kit/utils';\n\n@Component({\n    standalone: true,\n    selector: 'select[tuiSelect]',\n    imports: [NgForOf, NgIf, NgTemplateOutlet],\n    templateUrl: './native-select.template.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [tuiAsTextfieldAccessor(TuiNativeSelect), tuiAsControl(TuiNativeSelect)],\n    hostDirectives: [TuiWithTextfield],\n    host: {\n        '[attr.aria-invalid]': 'invalid()',\n        '[disabled]': '!interactive()',\n        '(change)': 'selectOption($event.target.options.selectedIndex)',\n    },\n})\nexport class TuiNativeSelect<T>\n    extends TuiControl<T | null>\n    implements TuiTextfieldAccessor<T>\n{\n    private readonly textfield = inject(TuiTextfieldDirective);\n\n    protected readonly isFlat = tuiIsFlat;\n    protected readonly placeholder = signal('');\n    protected readonly itemsHandlers: TuiItemsHandlers<T> = inject(TUI_ITEMS_HANDLERS);\n\n    protected readonly stringified = computed((value = this.value()) =>\n        tuiIsPresent(value) ? this.itemsHandlers.stringify()(value) : '',\n    );\n\n    protected readonly showPlaceholder = computed(\n        () => this.placeholder() && !this.stringified(),\n    );\n\n    protected readonly isSelected = computed(\n        (value = this.value()) =>\n            (x: T) =>\n                tuiIsPresent(value) && this.itemsHandlers.identityMatcher()(x, value),\n    );\n\n    protected readonly valueEffect = effect(() => {\n        this.textfield.value.set(this.stringified());\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    @Input()\n    public items: ReadonlyArray<readonly T[]> | readonly T[] | null = [];\n\n    @Input()\n    public labels: readonly string[] = [];\n\n    // TODO(v5): use signal inputs\n    @Input('placeholder')\n    public set placeholderSetter(x: string) {\n        this.placeholder.set(x);\n    }\n\n    public setValue(value: T | null): void {\n        this.onChange(value);\n    }\n\n    protected selectOption(index: number): void {\n        const items = (this.items?.flat() ?? []) as T[];\n\n        this.onChange(items[index - (this.showPlaceholder() ? 1 : 0)] ?? null);\n    }\n}\n","<option\n    *ngIf=\"showPlaceholder()\"\n    disabled\n    selected\n    value=\"\"\n>\n    {{ placeholder() }}\n</option>\n\n<ng-container *ngIf=\"items && !isFlat(items); else flatItems\">\n    <optgroup\n        *ngFor=\"let group of labels; let index = index\"\n        [label]=\"labels[index]\"\n    >\n        <ng-container *ngTemplateOutlet=\"options; context: {$implicit: items[index]}\" />\n    </optgroup>\n</ng-container>\n\n<ng-template #flatItems>\n    <ng-container *ngTemplateOutlet=\"options; context: {$implicit: items}\" />\n</ng-template>\n\n<ng-template\n    #options\n    let-items\n>\n    <option\n        *ngFor=\"let option of items\"\n        [disabled]=\"itemsHandlers.disabledItemHandler()(option)\"\n        [selected]=\"isSelected()(option)\"\n        [value]=\"itemsHandlers.stringify()(option)\"\n    >\n        {{ itemsHandlers.stringify()(option) }}\n    </option>\n</ng-template>\n","import {ChangeDetectionStrategy, Component, computed, inject} from '@angular/core';\nimport {TuiControl} from '@taiga-ui/cdk/classes';\nimport {tuiDirectiveBinding, tuiIsPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiDataListHost} from '@taiga-ui/core/components/data-list';\nimport {\n    TUI_DATA_LIST_HOST,\n    TuiOptionWithValue,\n} from '@taiga-ui/core/components/data-list';\nimport {TuiScrollIntoView} from '@taiga-ui/core/components/scrollbar';\nimport {tuiInjectAuxiliary} from '@taiga-ui/core/components/textfield';\nimport {TuiIcons} from '@taiga-ui/core/directives/icons';\nimport type {TuiItemsHandlers} from '@taiga-ui/core/directives/items-handlers';\nimport {TUI_ITEMS_HANDLERS} from '@taiga-ui/core/directives/items-handlers';\nimport {TUI_COMMON_ICONS} from '@taiga-ui/core/tokens';\n\n@Component({\n    standalone: true,\n    template: '',\n    styleUrls: ['./select-option.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [TuiScrollIntoView],\n    host: {\n        '[class._value]': 'option',\n        '[class._selected]': 'selected()',\n        '(click)': 'onClick()',\n    },\n})\nexport class TuiSelectOption<T> {\n    private readonly host = inject<TuiDataListHost<T>>(TUI_DATA_LIST_HOST);\n    private readonly itemsHandlers: TuiItemsHandlers<T> = inject(TUI_ITEMS_HANDLERS);\n    private readonly control = tuiInjectAuxiliary<TuiControl<T>>(\n        (x) => x instanceof TuiControl,\n    );\n\n    protected readonly option = inject<TuiOptionWithValue<T>>(TuiOptionWithValue, {\n        optional: true,\n    });\n\n    protected readonly icon =\n        this.option &&\n        tuiDirectiveBinding(TuiIcons, 'iconEnd', inject(TUI_COMMON_ICONS).check, {});\n\n    protected readonly selected = computed(\n        (controlValue = this.control()?.value(), optionValue = this.option?.value()) =>\n            tuiIsPresent(optionValue) &&\n            tuiIsPresent(controlValue) &&\n            this.itemsHandlers.identityMatcher()(controlValue, optionValue),\n    );\n\n    protected readonly scrolled = tuiDirectiveBinding(\n        TuiScrollIntoView,\n        'tuiScrollIntoView',\n        this.selected,\n    );\n\n    protected onClick(): void {\n        const value = this.option?.value();\n\n        if (this.host?.handleOption && value !== undefined) {\n            this.host.handleOption(value);\n        }\n    }\n}\n","import {Directive, effect, inject} from '@angular/core';\nimport {tuiAsControl, TuiControl} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport {tuiIsPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {tuiAsOptionContent} from '@taiga-ui/core/components/data-list';\nimport type {TuiTextfieldAccessor} from '@taiga-ui/core/components/textfield';\nimport {\n    tuiAsTextfieldAccessor,\n    TuiSelectLike,\n    TuiTextfieldDirective,\n    TuiWithTextfield,\n} from '@taiga-ui/core/components/textfield';\nimport {tuiDropdownEnabled, tuiDropdownOpen} from '@taiga-ui/core/directives/dropdown';\nimport type {TuiItemsHandlers} from '@taiga-ui/core/directives/items-handlers';\nimport {TUI_ITEMS_HANDLERS} from '@taiga-ui/core/directives/items-handlers';\nimport {tuiAsAuxiliary} from '@taiga-ui/core/tokens';\n\nimport {TuiSelectOption} from './select-option/select-option.component';\n\n@Directive({\n    standalone: true,\n    selector: 'input[tuiSelect]',\n    providers: [\n        tuiAsOptionContent(TuiSelectOption),\n        tuiAsTextfieldAccessor(TuiSelectDirective),\n        tuiAsControl(TuiSelectDirective),\n        tuiAsAuxiliary(TuiSelectDirective),\n    ],\n    hostDirectives: [TuiWithTextfield, TuiSelectLike],\n    host: {\n        '[disabled]': 'disabled()',\n        '(blur)': 'onTouched()',\n        '(input)': '$event.inputType?.includes(\"delete\") && setValue(null)',\n    },\n})\nexport class TuiSelectDirective<T>\n    extends TuiControl<T | null>\n    implements TuiTextfieldAccessor<T>\n{\n    private readonly textfield = inject(TuiTextfieldDirective);\n    private readonly open = tuiDropdownOpen();\n    private readonly itemsHandlers: TuiItemsHandlers<T> = inject(TUI_ITEMS_HANDLERS);\n\n    protected readonly dropdownEnabled = tuiDropdownEnabled(this.interactive);\n    protected readonly valueEffect = effect(() => {\n        const value = this.value();\n        const string = tuiIsPresent(value) ? this.itemsHandlers.stringify()(value) : '';\n\n        this.textfield.value.set(string);\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    public setValue(value: T | null): void {\n        this.onChange(value);\n\n        if (!value) {\n            this.open.set(true);\n        }\n    }\n}\n","import {TuiNativeSelect} from './native-select/native-select.component';\nimport {TuiSelectDirective} from './select.directive';\n\nexport const TuiSelect = [TuiSelectDirective, TuiNativeSelect] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}