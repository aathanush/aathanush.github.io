{"version":3,"file":"taiga-ui-kit-components-input-month-range.mjs","sources":["../../../projects/kit/components/input-month-range/input-month-range.options.ts","../../../projects/kit/components/input-month-range/input-month-range.directive.ts","../../../projects/kit/components/input-month-range/input-month-range.ts","../../../projects/kit/components/input-month-range/taiga-ui-kit-components-input-month-range.ts"],"sourcesContent":["import type {FactoryProvider} from '@angular/core';\nimport {inject} from '@angular/core';\nimport type {TuiValueTransformer} from '@taiga-ui/cdk/classes';\nimport {TUI_IDENTITY_VALUE_TRANSFORMER} from '@taiga-ui/cdk/classes';\nimport type {TuiMonthRange} from '@taiga-ui/cdk/date-time';\nimport type {TuiHandler} from '@taiga-ui/cdk/types';\nimport {\n    tuiCreateTokenFromFactory,\n    tuiProvideOptions,\n} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\nimport {TUI_INPUT_DATE_DEFAULT_OPTIONS_NEW} from '@taiga-ui/kit/components/input-date';\nimport {TUI_INPUT_MONTH_OPTIONS} from '@taiga-ui/kit/components/input-month';\n\nexport interface TuiInputMonthRangeOptions {\n    readonly icon: TuiHandler<TuiSizeL | TuiSizeS, string>;\n    readonly valueTransformer: TuiValueTransformer<TuiMonthRange | null, any>;\n}\n\nexport const TUI_INPUT_MONTH_RANGE_OPTIONS =\n    tuiCreateTokenFromFactory<TuiInputMonthRangeOptions>(() => ({\n        ...inject(TUI_INPUT_MONTH_OPTIONS),\n        valueTransformer: TUI_IDENTITY_VALUE_TRANSFORMER,\n    }));\n\nexport const tuiInputMonthRangeOptionsProvider = (\n    options: Partial<TuiInputMonthRangeOptions>,\n): FactoryProvider =>\n    tuiProvideOptions(\n        TUI_INPUT_MONTH_RANGE_OPTIONS,\n        options,\n        TUI_INPUT_DATE_DEFAULT_OPTIONS_NEW,\n    );\n","import {Directive, effect, inject, signal} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {tuiAsControl, TuiControl, tuiValueTransformerFrom} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport type {TuiMonth} from '@taiga-ui/cdk/date-time';\nimport {RANGE_SEPARATOR_CHAR, TuiMonthRange} from '@taiga-ui/cdk/date-time';\nimport {\n    tuiInjectAuxiliary,\n    TuiSelectLike,\n    TuiTextfieldDirective,\n    tuiTextfieldIconBinding,\n    TuiWithTextfield,\n} from '@taiga-ui/core/components/textfield';\nimport {\n    TuiDropdownAuto,\n    tuiDropdownEnabled,\n    tuiDropdownOpen,\n} from '@taiga-ui/core/directives/dropdown';\nimport {TuiCalendarMonth} from '@taiga-ui/kit/components/calendar-month';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\n\nimport {TUI_INPUT_MONTH_RANGE_OPTIONS} from './input-month-range.options';\n\n@Directive({\n    standalone: true,\n    selector: 'input[tuiInputMonthRange]',\n    providers: [\n        tuiAsControl(TuiInputMonthRangeDirective),\n        tuiValueTransformerFrom(TUI_INPUT_MONTH_RANGE_OPTIONS),\n    ],\n    hostDirectives: [TuiWithTextfield, TuiSelectLike, TuiDropdownAuto],\n    host: {\n        '[disabled]': 'disabled()',\n        '(blur)': 'onTouched()',\n        '(input)': '$event.inputType?.includes(\"delete\") && clear()',\n    },\n})\nexport class TuiInputMonthRangeDirective extends TuiControl<TuiMonthRange | null> {\n    private readonly textfield = inject(TuiTextfieldDirective);\n    private readonly formatter = toSignal(inject(TUI_MONTH_FORMATTER));\n    private readonly open = tuiDropdownOpen();\n    private readonly intermediateValue = signal<TuiMonth | null>(null);\n\n    private readonly calendar = tuiInjectAuxiliary<TuiCalendarMonth>(\n        (x) => x instanceof TuiCalendarMonth,\n    );\n\n    protected readonly icon = tuiTextfieldIconBinding(TUI_INPUT_MONTH_RANGE_OPTIONS);\n    protected readonly dropdownEnabled = tuiDropdownEnabled(this.interactive);\n\n    protected readonly valueEffect = effect(() => {\n        const value = this.value();\n        const format = this.formatter() || (() => '');\n        const string = value\n            ? format(value.from) + RANGE_SEPARATOR_CHAR + format(value.to)\n            : '';\n\n        this.textfield.value.set(string);\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected readonly calendarInit = effect(() => {\n        const calendar = this.calendar();\n\n        if (calendar) {\n            calendar.options.rangeMode = true;\n        }\n    });\n\n    protected readonly calendarSync = effect(() => {\n        this.calendar()?.value.set(this.intermediateValue() ?? this.value());\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    // TODO: use linked signal (Angular 19+)\n    protected readonly resetIntermediateValue = effect(() => {\n        this.intermediateValue.set(this.value() && null);\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected onMonthClickEffect = effect((onCleanup) => {\n        const subscription = this.calendar()?.monthClick.subscribe((month) => {\n            const intermediateValue = this.intermediateValue();\n\n            if (!intermediateValue) {\n                this.intermediateValue.set(month);\n            } else {\n                this.onChange(TuiMonthRange.sort(intermediateValue, month));\n                this.open.set(false);\n            }\n        });\n\n        onCleanup(() => subscription?.unsubscribe());\n    });\n\n    protected clear(): void {\n        this.onChange(null);\n        this.open.set(true);\n    }\n}\n","import {TuiCalendarMonth} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthRangeDirective} from './input-month-range.directive';\n\nexport const TuiInputMonthRange = [\n    TuiInputMonthRangeDirective,\n    TuiCalendarMonth,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}