{"version":3,"file":"taiga-ui-kit-components-tiles.mjs","sources":["../../../projects/kit/components/tiles/tiles.tokens.ts","../../../projects/kit/components/tiles/tiles.component.ts","../../../projects/kit/components/tiles/tile.service.ts","../../../projects/kit/components/tiles/tile.component.ts","../../../projects/kit/components/tiles/tile.template.html","../../../projects/kit/components/tiles/tile-handle.directive.ts","../../../projects/kit/components/tiles/tiles.ts","../../../projects/kit/components/tiles/taiga-ui-kit-components-tiles.ts"],"sourcesContent":["import {tuiCreateToken} from '@taiga-ui/cdk/utils/miscellaneous';\n\nexport type TuiReorderFunction = (\n    order: Map<number, number>,\n    currentIndex: number,\n    newIndex: number,\n) => Map<number, number>;\n\nexport const tuiTilesSwap: TuiReorderFunction = (order, currentIndex, newIndex) => {\n    if (!order.has(currentIndex) || !order.has(newIndex)) {\n        return order;\n    }\n\n    const dragged = order.get(currentIndex) ?? currentIndex;\n    const placement = order.get(newIndex) ?? newIndex;\n    const newOrder = new Map(order);\n\n    newOrder.set(currentIndex, placement);\n    newOrder.set(newIndex, dragged);\n\n    return newOrder;\n};\n\nexport const tuiTilesShift: TuiReorderFunction = (order, currentIndex, newIndex) => {\n    if (!order.has(currentIndex) || !order.has(newIndex)) {\n        return order;\n    }\n\n    const dragged = order.get(currentIndex) ?? currentIndex;\n    const placement = order.get(newIndex) ?? newIndex;\n    const newOrder = new Map(order);\n    const flipped = new Map(Array.from(order).map(([a, b]) => [b, a]));\n\n    if ((placement - dragged) / Math.abs(placement - dragged) > 0) {\n        for (let i = placement; i > dragged; i--) {\n            newOrder.set(flipped.get(i) ?? i, i - 1);\n        }\n    } else {\n        for (let i = placement; i < dragged; i++) {\n            newOrder.set(flipped.get(i) ?? i, i + 1);\n        }\n    }\n\n    newOrder.set(currentIndex, placement);\n\n    return newOrder;\n};\n\nexport const TUI_TILES_REORDER = tuiCreateToken<TuiReorderFunction>(tuiTilesSwap);\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    inject,\n    Input,\n    Output,\n    signal,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    MutationObserverService,\n    WA_MUTATION_OBSERVER_INIT,\n} from '@ng-web-apis/mutation-observer';\nimport {ResizeObserverService} from '@ng-web-apis/resize-observer';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {BehaviorSubject, debounce, filter, map, Subject, timer} from 'rxjs';\n\nimport {TUI_TILES_REORDER} from './tiles.tokens';\n\n@Component({\n    standalone: true,\n    selector: 'tui-tiles',\n    template: '<ng-content />',\n    styleUrls: ['./tiles.style.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        ResizeObserverService,\n        MutationObserverService,\n        {\n            provide: WA_MUTATION_OBSERVER_INIT,\n            useValue: {childList: true},\n        },\n    ],\n    host: {\n        '(pointerleave.zoneless)': 'rearrange()',\n    },\n})\nexport class TuiTilesComponent {\n    private readonly el$ = new Subject<Element | undefined>();\n    private readonly handler = inject(TUI_TILES_REORDER);\n\n    @Input()\n    public debounce = 0;\n\n    @Output()\n    public readonly orderChange = this.el$.pipe(\n        debounce(() => timer(this.debounce)),\n        filter(this.filter.bind(this)),\n        map((element) => this.reorder(element)),\n    );\n\n    public readonly element = signal<Element | null>(null);\n    public readonly el = tuiInjectElement();\n\n    public readonly order$ = new BehaviorSubject(new Map<number, number>());\n\n    @Input()\n    public set order(map: Map<number, number>) {\n        this.order$.next(map);\n    }\n\n    public get order(): Map<number, number> {\n        return this.order$.value;\n    }\n\n    public rearrange(element?: Element): void {\n        this.el$.next(element);\n    }\n\n    private filter(element?: Element): element is Element {\n        return !!this.element() && !!element && this.element() !== element;\n    }\n\n    private reorder(element: Element): Map<number, number> {\n        const elements = Array.from(this.el.children);\n        const currentIndex = elements.indexOf(this.element() || element);\n        const newIndex = elements.indexOf(element);\n        const order = this.order.size\n            ? new Map(this.order)\n            : new Map(elements.map((_, index) => [index, index]));\n\n        this.order$.next(this.handler(order, currentIndex, newIndex));\n\n        return this.order$.value;\n    }\n}\n","import {isPlatformBrowser} from '@angular/common';\nimport type {OnDestroy} from '@angular/core';\nimport {inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {MutationObserverService} from '@ng-web-apis/mutation-observer';\nimport {ResizeObserverService} from '@ng-web-apis/resize-observer';\nimport {tuiZonefreeScheduler} from '@taiga-ui/cdk/observables';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {tuiArrayShallowEquals, tuiPx} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {Observable} from 'rxjs';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    startWith,\n    Subscription,\n} from 'rxjs';\n\nimport {TuiTilesComponent} from './tiles.component';\n\n@Injectable()\nexport class TuiTileService implements OnDestroy {\n    private readonly isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n    private readonly el = tuiInjectElement();\n    private readonly tiles = inject(TuiTilesComponent);\n    private readonly sub = new Subscription();\n    private readonly offset$ = new BehaviorSubject<readonly [number, number]>([NaN, NaN]);\n    private readonly position$: Observable<readonly [number, number]> = combineLatest([\n        this.offset$.pipe(distinctUntilChanged(tuiArrayShallowEquals)),\n        inject(ResizeObserverService).pipe(startWith(null)),\n        inject(MutationObserverService).pipe(startWith(null)),\n        this.tiles.order$.pipe(debounceTime(0, tuiZonefreeScheduler())),\n    ]).pipe(map(([offset]) => offset));\n\n    public init(element: HTMLElement): void {\n        if (this.isBrowser) {\n            this.sub.add(\n                this.position$.subscribe((offset) => {\n                    this.setPosition(element, offset);\n                    this.setRect(element, offset);\n                }),\n            );\n        } else {\n            this.el.style.setProperty('position', 'relative');\n        }\n    }\n\n    public setOffset(offset: readonly [number, number]): void {\n        this.offset$.next(offset);\n    }\n\n    public ngOnDestroy(): void {\n        this.sub.unsubscribe();\n    }\n\n    private getRect([left, top]: readonly [number, number]): DOMRect {\n        const elTop = Number.isNaN(top) ? this.el.offsetTop : top;\n        const elLeft = Number.isNaN(left) ? this.el.offsetLeft : left;\n\n        const rect = {\n            top: elTop,\n            left: elLeft,\n            width: this.el.clientWidth,\n            height: this.el.clientHeight,\n            right: NaN,\n            bottom: NaN,\n            y: elTop,\n            x: elLeft,\n        };\n\n        return {\n            ...rect,\n            toJSON: () => JSON.stringify(rect),\n        };\n    }\n\n    private setRect({style}: HTMLElement, offset: readonly [number, number]): void {\n        const {top, left, width, height} = this.getRect(offset);\n\n        style.top = tuiPx(top);\n        style.left = tuiPx(left);\n        style.width = tuiPx(width);\n        style.height = tuiPx(height);\n    }\n\n    private setPosition(element: HTMLElement, [left]: readonly [number, number]): void {\n        if (!Number.isNaN(left)) {\n            element.style.setProperty('position', 'fixed');\n            element.style.setProperty('transition', 'none');\n\n            return;\n        }\n\n        const {style} = element;\n        const rect = element.getBoundingClientRect();\n        const host = this.el.getBoundingClientRect();\n\n        style.removeProperty('position');\n        style.removeProperty('transition');\n        style.removeProperty('top');\n        style.removeProperty('left');\n\n        style.top = tuiPx(rect.top - host.top + this.el.offsetTop);\n        style.left = tuiPx(rect.left - host.left + this.el.offsetLeft);\n    }\n}\n","import type {AfterViewInit, ElementRef, OnDestroy} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    inject,\n    Input,\n    signal,\n    ViewChild,\n} from '@angular/core';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\n\nimport {TuiTileService} from './tile.service';\nimport {TuiTilesComponent} from './tiles.component';\n\n@Component({\n    standalone: true,\n    selector: 'tui-tile',\n    templateUrl: './tile.template.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiTileService],\n    host: {\n        '[class._dragged]': 'dragged()',\n        '[style.gridColumn]': 'column',\n        '[style.gridRow]': 'row',\n        '(pointerenter)': 'onEnter()',\n    },\n})\nexport class TuiTile implements OnDestroy, AfterViewInit {\n    @ViewChild('wrapper')\n    private readonly wrapper?: ElementRef<HTMLElement>;\n\n    private readonly service = inject(TuiTileService);\n    private readonly tiles = inject(TuiTilesComponent);\n\n    protected dragged = signal(false);\n\n    @Input()\n    public width = 1;\n\n    @Input()\n    public height = 1;\n\n    public readonly element = tuiInjectElement();\n\n    public onDrag(offset: readonly [number, number]): void {\n        const dragged = !Number.isNaN(offset[0]);\n\n        this.dragged.set(this.dragged() || dragged);\n\n        this.tiles.element.set(dragged ? this.element : null);\n        this.service.setOffset(offset);\n\n        if (dragged) {\n            this.tiles.el.classList.add('_dragged');\n        } else {\n            this.tiles.el.classList.remove('_dragged');\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        if (this.wrapper) {\n            this.service.init(this.wrapper.nativeElement);\n        }\n    }\n\n    public ngOnDestroy(): void {\n        if (this.tiles.element() === this.element) {\n            this.tiles.element.set(null);\n        }\n    }\n\n    protected get column(): string {\n        return `span var(--tui-width, ${this.width})`;\n    }\n\n    protected get row(): string {\n        return `span var(--tui-height, ${this.height})`;\n    }\n\n    protected onEnter(): void {\n        this.tiles.rearrange(this.element);\n    }\n\n    protected onTransitionEnd(): void {\n        this.dragged.set(false);\n    }\n}\n","<div\n    #wrapper\n    class=\"t-wrapper\"\n    (transitionend.self)=\"onTransitionEnd()\"\n>\n    <ng-content />\n</div>\n","import {Directive, inject} from '@angular/core';\nimport {tuiGetActualTarget, tuiIsElement} from '@taiga-ui/cdk/utils/dom';\nimport {shouldCall} from '@taiga-ui/event-plugins';\n\nimport {TuiTile} from './tile.component';\n\nfunction isInteracting(this: TuiTileHandle, x = NaN): boolean {\n    return !Number.isNaN(x) || !Number.isNaN(this['x']);\n}\n\nfunction isDragging(this: TuiTileHandle): boolean {\n    return !Number.isNaN(this['x']);\n}\n\n@Directive({\n    standalone: true,\n    selector: '[tuiTileHandle]',\n    host: {\n        '[style.touchAction]': '\"none\"',\n        '[style.userSelect]': '\"none\"',\n        '(pointerdown.zoneless.prevent)': 'onStart($event)',\n        '(document:pointerup.zoneless)': 'onPointer()',\n        '(document:pointermove.zoneless)': 'onMove($event.x, $event.y)',\n    },\n})\nexport class TuiTileHandle {\n    private readonly tile = inject(TuiTile);\n    private x = NaN;\n    private y = NaN;\n\n    @shouldCall(isInteracting)\n    protected onPointer(x = NaN, y = NaN): void {\n        const {left, top} = this.tile.element.getBoundingClientRect();\n\n        this.x = x - left;\n        this.y = y - top;\n        this.tile.onDrag([NaN, NaN]);\n    }\n\n    @shouldCall(isDragging)\n    protected onMove(x: number, y: number): void {\n        this.tile.onDrag([x - this.x, y - this.y]);\n    }\n\n    protected onStart(event: PointerEvent): void {\n        const target = tuiGetActualTarget(event);\n        const {x, y, pointerId} = event;\n\n        if (tuiIsElement(target)) {\n            target.releasePointerCapture(pointerId);\n        }\n\n        this.onPointer(x, y);\n    }\n}\n","import {TuiTile} from './tile.component';\nimport {TuiTileHandle} from './tile-handle.directive';\nimport {TuiTilesComponent} from './tiles.component';\n\nexport const TuiTiles = [TuiTilesComponent, TuiTile, TuiTileHandle] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}