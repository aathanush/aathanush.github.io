{"version":3,"file":"taiga-ui-kit-components-input-month.mjs","sources":["../../../projects/kit/components/input-month/input-month.options.ts","../../../projects/kit/components/input-month/input-month.directive.ts","../../../projects/kit/components/input-month/input-month.component.ts","../../../projects/kit/components/input-month/input-month.template.html","../../../projects/kit/components/input-month/input-month.ts","../../../projects/kit/components/input-month/taiga-ui-kit-components-input-month.ts"],"sourcesContent":["import type {FactoryProvider} from '@angular/core';\nimport {inject} from '@angular/core';\nimport type {TuiValueTransformer} from '@taiga-ui/cdk/classes';\nimport {TUI_IDENTITY_VALUE_TRANSFORMER} from '@taiga-ui/cdk/classes';\nimport type {TuiMonth} from '@taiga-ui/cdk/date-time';\nimport type {TuiHandler} from '@taiga-ui/cdk/types';\nimport {\n    tuiCreateTokenFromFactory,\n    tuiProvideOptions,\n} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\nimport {\n    TUI_INPUT_DATE_DEFAULT_OPTIONS_NEW,\n    TUI_INPUT_DATE_OPTIONS_NEW,\n} from '@taiga-ui/kit/components/input-date';\n\nexport interface TuiInputMonthOptions {\n    readonly icon: TuiHandler<TuiSizeL | TuiSizeS, string>;\n    readonly valueTransformer: TuiValueTransformer<TuiMonth | null, any>;\n}\n\n/**\n * @deprecated remove in v5\n */\nexport const TUI_INPUT_MONTH_DEFAULT_OPTIONS: TuiInputMonthOptions = {\n    icon: () => '@tui.calendar',\n    valueTransformer: TUI_IDENTITY_VALUE_TRANSFORMER,\n};\n\nexport const TUI_INPUT_MONTH_OPTIONS = tuiCreateTokenFromFactory<TuiInputMonthOptions>(\n    () => ({\n        ...inject(TUI_INPUT_DATE_OPTIONS_NEW),\n        valueTransformer: TUI_IDENTITY_VALUE_TRANSFORMER,\n    }),\n);\n\nexport const tuiInputMonthOptionsProvider = (\n    options: Partial<TuiInputMonthOptions>,\n): FactoryProvider =>\n    tuiProvideOptions(\n        TUI_INPUT_MONTH_OPTIONS,\n        options,\n        TUI_INPUT_DATE_DEFAULT_OPTIONS_NEW,\n    );\n","import {computed, Directive, effect, inject} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {tuiAsControl, TuiControl, tuiValueTransformerFrom} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport type {TuiMonth} from '@taiga-ui/cdk/date-time';\nimport {TUI_IS_MOBILE} from '@taiga-ui/cdk/tokens';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {\n    tuiInjectAuxiliary,\n    TuiSelectLike,\n    TuiTextfieldDirective,\n    tuiTextfieldIconBinding,\n    TuiWithTextfield,\n} from '@taiga-ui/core/components/textfield';\nimport {\n    TuiDropdownAuto,\n    tuiDropdownEnabled,\n    tuiDropdownOpen,\n} from '@taiga-ui/core/directives/dropdown';\nimport {TuiCalendarMonth} from '@taiga-ui/kit/components/calendar-month';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\n\nimport {TUI_INPUT_MONTH_OPTIONS} from './input-month.options';\n\n@Directive({\n    standalone: true,\n    selector: 'input[tuiInputMonth]',\n    providers: [\n        tuiAsControl(TuiInputMonthDirective),\n        tuiValueTransformerFrom(TUI_INPUT_MONTH_OPTIONS),\n    ],\n    hostDirectives: [TuiWithTextfield, TuiSelectLike, TuiDropdownAuto],\n    host: {\n        '[disabled]': 'disabled()',\n        '(blur)': 'onTouched()',\n        '(input)': '$event.inputType?.includes(\"delete\") && clear()',\n    },\n})\nexport class TuiInputMonthDirective extends TuiControl<TuiMonth | null> {\n    private readonly textfield = inject(TuiTextfieldDirective);\n    private readonly formatter = toSignal(inject(TUI_MONTH_FORMATTER));\n    private readonly open = tuiDropdownOpen();\n\n    protected readonly icon = tuiTextfieldIconBinding(TUI_INPUT_MONTH_OPTIONS);\n    protected readonly dropdownEnabled = tuiDropdownEnabled(\n        computed(() => !this.native && this.interactive()),\n    );\n\n    protected readonly valueEffect = effect(() => {\n        this.textfield.value.set(this.formatter()?.(this.value()) || '');\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected readonly calendarIn = effect(() => {\n        this.calendar()?.value.set(this.value());\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected readonly calendarOut = effect((onCleanup) => {\n        const subscription = this.calendar()?.monthClick.subscribe((month) => {\n            this.onChange(month);\n            this.open.set(false);\n        });\n\n        onCleanup(() => subscription?.unsubscribe());\n    });\n\n    public readonly calendar = tuiInjectAuxiliary<TuiCalendarMonth>(\n        (x) => x instanceof TuiCalendarMonth,\n    );\n\n    public readonly native =\n        tuiInjectElement<HTMLInputElement>().type === 'month' && inject(TUI_IS_MOBILE);\n\n    protected clear(): void {\n        this.onChange(null);\n        this.open.set(this.dropdownEnabled());\n    }\n}\n","import {NgIf} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    effect,\n    inject,\n    Input,\n    signal,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport {TUI_FIRST_DAY, TUI_LAST_DAY, TuiMonth} from '@taiga-ui/cdk/date-time';\nimport {TuiTextfieldContent} from '@taiga-ui/core/components/textfield';\n\nimport {TuiInputMonthDirective} from './input-month.directive';\n\n@Component({\n    standalone: true,\n    selector: 'input[tuiInputMonth][type=\"month\"]',\n    imports: [NgIf, TuiTextfieldContent],\n    templateUrl: './input-month.template.html',\n    styleUrls: ['./input-month.style.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        ngSkipHydration: 'true',\n        '[type]': '\"text\"',\n    },\n})\nexport class TuiInputMonthComponent {\n    protected readonly host = inject(TuiInputMonthDirective);\n    protected readonly min = signal<TuiMonth | null>(null);\n    protected readonly max = signal<TuiMonth | null>(null);\n    protected readonly calendarSync = effect(() => {\n        const calendar = this.host.calendar();\n\n        if (calendar) {\n            calendar.min.set(this.min() ?? TUI_FIRST_DAY); // TODO(v5): remove TUI_FIRST_DAY fallback\n            calendar.max.set(this.max() ?? TUI_LAST_DAY); // TODO(v5): remove TUI_LAST_DAY fallback\n        }\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    // TODO(v5): use signal inputs\n    @Input('min')\n    public set minSetter(x: TuiMonth | null) {\n        this.min.set(x);\n    }\n\n    // TODO(v5): use signal inputs\n    @Input('max')\n    public set maxSetter(x: TuiMonth | null) {\n        this.max.set(x);\n    }\n\n    protected onInput(value: string): void {\n        if (!value) {\n            return this.host.onChange(null);\n        }\n\n        const [year = 0, month = 0] = value.split('-').map(Number);\n\n        this.host.onChange(new TuiMonth(year, month - 1));\n    }\n}\n","<ng-container *ngIf=\"host.native\">\n    <input\n        *tuiTextfieldContent\n        type=\"month\"\n        [max]=\"max()?.toJSON()\"\n        [min]=\"min()?.toJSON()\"\n        [value]=\"host.value()?.toJSON()\"\n        (click.stop.zoneless)=\"(0)\"\n        (input)=\"onInput($any($event.target).value)\"\n        (pointerdown.stop.zoneless)=\"(0)\"\n    />\n</ng-container>\n","import {TuiCalendarMonth} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthComponent} from './input-month.component';\nimport {TuiInputMonthDirective} from './input-month.directive';\n\nexport const TuiInputMonth = [\n    TuiInputMonthComponent,\n    TuiInputMonthDirective,\n    TuiCalendarMonth,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}