import { Directive, inject } from '@angular/core';
import { NG_VALIDATORS, Validators } from '@angular/forms';
import { TuiValidator } from '@taiga-ui/cdk/directives/validator';
import { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiCreateFileFormatValidator, tuiCreateFileSizeValidator, } from '../files.validators';
import { TUI_INPUT_FILES_OPTIONS } from './input-files.options';
import * as i0 from "@angular/core";
class TuiInputFilesValidator extends TuiValidator {
    constructor() {
        super(...arguments);
        this.options = inject(TUI_INPUT_FILES_OPTIONS);
        this.accept = this.options.accept;
        this.maxFileSize = this.options.maxFileSize;
    }
    ngOnChanges() {
        this.update();
    }
    ngOnInit() {
        this.update();
    }
    update() {
        this.validate =
            Validators.compose([
                tuiCreateFileFormatValidator(this.accept),
                tuiCreateFileSizeValidator(this.maxFileSize),
            ]) || Validators.nullValidator;
        this.onChange();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputFilesValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiInputFilesValidator, isStandalone: true, inputs: { accept: "accept", maxFileSize: "maxFileSize" }, host: { properties: { "accept": "accept" } }, providers: [tuiProvide(NG_VALIDATORS, TuiInputFilesValidator, true)], exportAs: ["tuiInputFilesValidator"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }
}
export { TuiInputFilesValidator };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputFilesValidator, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    inputs: ['accept', 'maxFileSize'],
                    providers: [tuiProvide(NG_VALIDATORS, TuiInputFilesValidator, true)],
                    exportAs: 'tuiInputFilesValidator',
                    host: {
                        '[accept]': 'accept',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZmlsZXMtdmFsaWRhdG9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL2ZpbGVzL2lucHV0LWZpbGVzL2lucHV0LWZpbGVzLXZhbGlkYXRvci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDaEUsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBRTdELE9BQU8sRUFDSCw0QkFBNEIsRUFDNUIsMEJBQTBCLEdBQzdCLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sdUJBQXVCLENBQUM7O0FBRTlELE1BU2Esc0JBQXVCLFNBQVEsWUFBWTtJQVR4RDs7UUFVcUIsWUFBTyxHQUFHLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBRXBELFdBQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUM3QixnQkFBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO0tBa0JqRDtJQWhCbUIsV0FBVztRQUN2QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVNLFFBQVE7UUFDWCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVPLE1BQU07UUFDVixJQUFJLENBQUMsUUFBUTtZQUNULFVBQVUsQ0FBQyxPQUFPLENBQUM7Z0JBQ2YsNEJBQTRCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztnQkFDekMsMEJBQTBCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQzthQUMvQyxDQUFDLElBQUksVUFBVSxDQUFDLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDcEIsQ0FBQzsrR0FyQlEsc0JBQXNCO21HQUF0QixzQkFBc0IseUlBTnBCLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxzQkFBc0IsRUFBRSxJQUFJLENBQUMsQ0FBQzs7U0FNM0Qsc0JBQXNCOzRGQUF0QixzQkFBc0I7a0JBVGxDLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRSxhQUFhLENBQUM7b0JBQ2pDLFNBQVMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxhQUFhLDBCQUEwQixJQUFJLENBQUMsQ0FBQztvQkFDcEUsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsSUFBSSxFQUFFO3dCQUNGLFVBQVUsRUFBRSxRQUFRO3FCQUN2QjtpQkFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtPbkNoYW5nZXMsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0RpcmVjdGl2ZSwgaW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMSURBVE9SUywgVmFsaWRhdG9yc30gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtUdWlWYWxpZGF0b3J9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGlyZWN0aXZlcy92YWxpZGF0b3InO1xuaW1wb3J0IHt0dWlQcm92aWRlfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuXG5pbXBvcnQge1xuICAgIHR1aUNyZWF0ZUZpbGVGb3JtYXRWYWxpZGF0b3IsXG4gICAgdHVpQ3JlYXRlRmlsZVNpemVWYWxpZGF0b3IsXG59IGZyb20gJy4uL2ZpbGVzLnZhbGlkYXRvcnMnO1xuaW1wb3J0IHtUVUlfSU5QVVRfRklMRVNfT1BUSU9OU30gZnJvbSAnLi9pbnB1dC1maWxlcy5vcHRpb25zJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBpbnB1dHM6IFsnYWNjZXB0JywgJ21heEZpbGVTaXplJ10sXG4gICAgcHJvdmlkZXJzOiBbdHVpUHJvdmlkZShOR19WQUxJREFUT1JTLCBUdWlJbnB1dEZpbGVzVmFsaWRhdG9yLCB0cnVlKV0sXG4gICAgZXhwb3J0QXM6ICd0dWlJbnB1dEZpbGVzVmFsaWRhdG9yJyxcbiAgICBob3N0OiB7XG4gICAgICAgICdbYWNjZXB0XSc6ICdhY2NlcHQnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUlucHV0RmlsZXNWYWxpZGF0b3IgZXh0ZW5kcyBUdWlWYWxpZGF0b3IgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zID0gaW5qZWN0KFRVSV9JTlBVVF9GSUxFU19PUFRJT05TKTtcblxuICAgIHB1YmxpYyBhY2NlcHQgPSB0aGlzLm9wdGlvbnMuYWNjZXB0O1xuICAgIHB1YmxpYyBtYXhGaWxlU2l6ZSA9IHRoaXMub3B0aW9ucy5tYXhGaWxlU2l6ZTtcblxuICAgIHB1YmxpYyBvdmVycmlkZSBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1cGRhdGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudmFsaWRhdGUgPVxuICAgICAgICAgICAgVmFsaWRhdG9ycy5jb21wb3NlKFtcbiAgICAgICAgICAgICAgICB0dWlDcmVhdGVGaWxlRm9ybWF0VmFsaWRhdG9yKHRoaXMuYWNjZXB0KSxcbiAgICAgICAgICAgICAgICB0dWlDcmVhdGVGaWxlU2l6ZVZhbGlkYXRvcih0aGlzLm1heEZpbGVTaXplKSxcbiAgICAgICAgICAgIF0pIHx8IFZhbGlkYXRvcnMubnVsbFZhbGlkYXRvcjtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSgpO1xuICAgIH1cbn1cbiJdfQ==