import { EventEmitter } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/directives/present";
export declare class TuiTableExpand {
    private readonly content?;
    private readonly el;
    private readonly server;
    protected readonly transitioning: import("@angular/core").WritableSignal<boolean>;
    protected readonly contentHeight: import("@angular/core").Signal<number>;
    protected readonly visible$: Subject<boolean>;
    protected readonly sub: import("rxjs").Subscription;
    readonly expandedChange: EventEmitter<boolean>;
    readonly expanded: import("@angular/core").WritableSignal<boolean>;
    set expandedSetter(open: boolean);
    toggle(): void;
    private update;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiTableExpand, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiTableExpand, "tui-table-expand", never, { "expandedSetter": { "alias": "expanded"; "required": false; }; }, { "expandedChange": "expandedChange"; }, never, ["*"], true, [{ directive: typeof i1.TuiPresent; inputs: {}; outputs: { "tuiPresentChange": "tuiPresentChange"; }; }]>;
}
