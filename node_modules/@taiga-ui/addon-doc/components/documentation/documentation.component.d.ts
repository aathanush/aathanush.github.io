import type { AfterContentInit, QueryList } from '@angular/core';
import type { TuiMatcher } from '@taiga-ui/cdk/types';
import { TuiDocDocumentationPropertyConnector } from './documentation-property-connector.directive';
import * as i0 from "@angular/core";
export declare class TuiDocDocumentation implements AfterContentInit {
    private readonly cdr;
    private readonly destroyRef;
    protected propertiesConnectors: QueryList<TuiDocDocumentationPropertyConnector<unknown>>;
    protected readonly texts: [argument: string, type: string, name: string, value: string, tooltip: string];
    protected readonly excludedProperties: Set<string>;
    protected activeItemIndex: number;
    heading: string;
    showValues: boolean;
    isAPI: boolean;
    ngAfterContentInit(): void;
    protected get type(): string;
    protected matcher: TuiMatcher<[
        TuiDocDocumentationPropertyConnector<unknown>,
        Set<string>
    ]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDocDocumentation, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDocDocumentation, "tui-doc-documentation", never, { "heading": { "alias": "heading"; "required": false; }; "showValues": { "alias": "showValues"; "required": false; }; "isAPI": { "alias": "isAPI"; "required": false; }; }, {}, ["propertiesConnectors"], ["*"], true, never>;
}
