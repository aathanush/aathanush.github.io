import type { AfterViewInit } from '@angular/core';
import { EventEmitter } from '@angular/core';
import { TuiDocAPINumberItem } from './api-item-number.directive';
import * as i0 from "@angular/core";
export declare class TuiDocAPIItem<T> implements AfterViewInit {
    private readonly locationRef;
    private readonly activatedRoute;
    private readonly urlSerializer;
    private readonly urlStateHandler;
    private readonly alerts;
    protected readonly numberItem: TuiDocAPINumberItem | null;
    name: string;
    type: string;
    value?: T;
    items: readonly T[];
    readonly valueChange: EventEmitter<T>;
    ngAfterViewInit(): void;
    onValueChange(value: T): void;
    emitEvent(event: unknown): void;
    private clearBrackets;
    private parseParams;
    private setQueryParam;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDocAPIItem<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDocAPIItem<any>, "tr[tuiDocAPIItem]", never, { "name": { "alias": "name"; "required": false; }; "type": { "alias": "type"; "required": false; }; "value": { "alias": "value"; "required": false; }; "items": { "alias": "items"; "required": false; }; }, { "valueChange": "valueChange"; }, never, ["*"], true, never>;
}
