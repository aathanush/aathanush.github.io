import { inject, Pipe, TemplateRef } from '@angular/core';
import { tuiInspectAny } from '@taiga-ui/addon-doc/utils';
import { TUI_IS_E2E } from '@taiga-ui/cdk/tokens';
import * as i0 from "@angular/core";
class TuiInspectPipe {
    constructor() {
        this.isE2E = inject(TUI_IS_E2E);
    }
    transform(value, depth = 2) {
        if (this.isE2E && typeof value === 'function') {
            /**
             * @description:
             * When developing in production mode the webpack bundler minify
             * functions in different ways, then due to which the string content
             * of the function may differ from build to build, which can be to
             * various problems when screenshot testing on e2e.
             */
            return 'λ(x) => y';
        }
        return value instanceof TemplateRef ? 'TemplateRef' : tuiInspectAny(value, depth);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInspectPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiInspectPipe, isStandalone: true, name: "tuiInspectAny" }); }
}
export { TuiInspectPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInspectPipe, decorators: [{
            type: Pipe,
            args: [{
                    standalone: true,
                    name: 'tuiInspectAny',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zcGVjdC5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tZG9jL2NvbXBvbmVudHMvZG9jdW1lbnRhdGlvbi9waXBlcy9pbnNwZWN0LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7O0FBRWhELE1BSWEsY0FBYztJQUozQjtRQUtxQixVQUFLLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBZ0IvQztJQWRVLFNBQVMsQ0FBQyxLQUFjLEVBQUUsS0FBSyxHQUFHLENBQUM7UUFDdEMsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLE9BQU8sS0FBSyxLQUFLLFVBQVUsRUFBRTtZQUMzQzs7Ozs7O2VBTUc7WUFDSCxPQUFPLFdBQVcsQ0FBQztTQUN0QjtRQUVELE9BQU8sS0FBSyxZQUFZLFdBQVcsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RGLENBQUM7K0dBaEJRLGNBQWM7NkdBQWQsY0FBYzs7U0FBZCxjQUFjOzRGQUFkLGNBQWM7a0JBSjFCLElBQUk7bUJBQUM7b0JBQ0YsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLElBQUksRUFBRSxlQUFlO2lCQUN4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7aW5qZWN0LCBQaXBlLCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUluc3BlY3RBbnl9IGZyb20gJ0B0YWlnYS11aS9hZGRvbi1kb2MvdXRpbHMnO1xuaW1wb3J0IHtUVUlfSVNfRTJFfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3Rva2Vucyc7XG5cbkBQaXBlKHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIG5hbWU6ICd0dWlJbnNwZWN0QW55Jyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpSW5zcGVjdFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGlzRTJFID0gaW5qZWN0KFRVSV9JU19FMkUpO1xuXG4gICAgcHVibGljIHRyYW5zZm9ybSh2YWx1ZTogdW5rbm93biwgZGVwdGggPSAyKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKHRoaXMuaXNFMkUgJiYgdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAqIFdoZW4gZGV2ZWxvcGluZyBpbiBwcm9kdWN0aW9uIG1vZGUgdGhlIHdlYnBhY2sgYnVuZGxlciBtaW5pZnlcbiAgICAgICAgICAgICAqIGZ1bmN0aW9ucyBpbiBkaWZmZXJlbnQgd2F5cywgdGhlbiBkdWUgdG8gd2hpY2ggdGhlIHN0cmluZyBjb250ZW50XG4gICAgICAgICAgICAgKiBvZiB0aGUgZnVuY3Rpb24gbWF5IGRpZmZlciBmcm9tIGJ1aWxkIHRvIGJ1aWxkLCB3aGljaCBjYW4gYmUgdG9cbiAgICAgICAgICAgICAqIHZhcmlvdXMgcHJvYmxlbXMgd2hlbiBzY3JlZW5zaG90IHRlc3Rpbmcgb24gZTJlLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZXR1cm4gJ867KHgpID0+IHknO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWYgPyAnVGVtcGxhdGVSZWYnIDogdHVpSW5zcGVjdEFueSh2YWx1ZSwgZGVwdGgpO1xuICAgIH1cbn1cbiJdfQ==