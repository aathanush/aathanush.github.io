import { inject, Pipe } from '@angular/core';
import { TUI_DOC_TYPE_REFERENCE_HANDLER, TUI_DOC_TYPE_REFERENCE_PARSER, } from '@taiga-ui/addon-doc/tokens';
import * as i0 from "@angular/core";
class TuiDocTypeReferencePipe {
    constructor() {
        this.parser = inject(TUI_DOC_TYPE_REFERENCE_PARSER);
        this.linkHandler = inject(TUI_DOC_TYPE_REFERENCE_HANDLER);
    }
    transform(original) {
        return this.parser(original)
            .map(({ type, extracted }) => ({
            type,
            extracted,
            reference: this.linkHandler?.(extracted) ?? null,
        }))
            .sort((a, b) => b.reference?.localeCompare(a.reference ?? '') ?? -1);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDocTypeReferencePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiDocTypeReferencePipe, isStandalone: true, name: "tuiDocTypeReference" }); }
}
export { TuiDocTypeReferencePipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDocTypeReferencePipe, decorators: [{
            type: Pipe,
            args: [{
                    standalone: true,
                    name: 'tuiDocTypeReference',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS1yZWZlcmVuY2UucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLWRvYy9jb21wb25lbnRzL2RvY3VtZW50YXRpb24vcGlwZXMvdHlwZS1yZWZlcmVuY2UucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQ0gsOEJBQThCLEVBQzlCLDZCQUE2QixHQUNoQyxNQUFNLDRCQUE0QixDQUFDOztBQUVwQyxNQUlhLHVCQUF1QjtJQUpwQztRQUtxQixXQUFNLEdBQUcsTUFBTSxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFDL0MsZ0JBQVcsR0FBRyxNQUFNLENBQUMsOEJBQThCLENBQUMsQ0FBQztLQWV6RTtJQWJVLFNBQVMsQ0FBQyxRQUFnQjtRQUs3QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO2FBQ3ZCLEdBQUcsQ0FBQyxDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3pCLElBQUk7WUFDSixTQUFTO1lBQ1QsU0FBUyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJO1NBQ25ELENBQUMsQ0FBQzthQUNGLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3RSxDQUFDOytHQWhCUSx1QkFBdUI7NkdBQXZCLHVCQUF1Qjs7U0FBdkIsdUJBQXVCOzRGQUF2Qix1QkFBdUI7a0JBSm5DLElBQUk7bUJBQUM7b0JBQ0YsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLElBQUksRUFBRSxxQkFBcUI7aUJBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge1BpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtpbmplY3QsIFBpcGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBUVUlfRE9DX1RZUEVfUkVGRVJFTkNFX0hBTkRMRVIsXG4gICAgVFVJX0RPQ19UWVBFX1JFRkVSRU5DRV9QQVJTRVIsXG59IGZyb20gJ0B0YWlnYS11aS9hZGRvbi1kb2MvdG9rZW5zJztcblxuQFBpcGUoe1xuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgbmFtZTogJ3R1aURvY1R5cGVSZWZlcmVuY2UnLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEb2NUeXBlUmVmZXJlbmNlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgcGFyc2VyID0gaW5qZWN0KFRVSV9ET0NfVFlQRV9SRUZFUkVOQ0VfUEFSU0VSKTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGxpbmtIYW5kbGVyID0gaW5qZWN0KFRVSV9ET0NfVFlQRV9SRUZFUkVOQ0VfSEFORExFUik7XG5cbiAgICBwdWJsaWMgdHJhbnNmb3JtKG9yaWdpbmFsOiBzdHJpbmcpOiBSZWFkb25seUFycmF5PHtcbiAgICAgICAgdHlwZTogc3RyaW5nO1xuICAgICAgICBleHRyYWN0ZWQ6IHN0cmluZztcbiAgICAgICAgcmVmZXJlbmNlOiBzdHJpbmcgfCBudWxsO1xuICAgIH0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VyKG9yaWdpbmFsKVxuICAgICAgICAgICAgLm1hcCgoe3R5cGUsIGV4dHJhY3RlZH0pID0+ICh7XG4gICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICBleHRyYWN0ZWQsXG4gICAgICAgICAgICAgICAgcmVmZXJlbmNlOiB0aGlzLmxpbmtIYW5kbGVyPy4oZXh0cmFjdGVkKSA/PyBudWxsLFxuICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gYi5yZWZlcmVuY2U/LmxvY2FsZUNvbXBhcmUoYS5yZWZlcmVuY2UgPz8gJycpID8/IC0xKTtcbiAgICB9XG59XG4iXX0=