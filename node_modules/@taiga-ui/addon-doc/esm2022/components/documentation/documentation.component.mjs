import { animate, style, transition, trigger } from '@angular/animations';
import { NgForOf, NgIf, NgSwitch, NgSwitchCase, NgTemplateOutlet } from '@angular/common';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, DestroyRef, inject, Input, } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { FormsModule } from '@angular/forms';
import { TUI_DOC_DOCUMENTATION_TEXTS, TUI_DOC_EXCLUDED_PROPERTIES, } from '@taiga-ui/addon-doc/tokens';
import { EMPTY_QUERY } from '@taiga-ui/cdk/constants';
import { tuiQueryListChanges, tuiWatch } from '@taiga-ui/cdk/observables';
import { TuiFilterPipe } from '@taiga-ui/cdk/pipes/filter';
import { TuiToArrayPipe } from '@taiga-ui/cdk/pipes/to-array';
import { TuiNotification } from '@taiga-ui/core/components/notification';
import { tuiScrollbarOptionsProvider } from '@taiga-ui/core/components/scrollbar';
import { TuiTextfield } from '@taiga-ui/core/components/textfield';
import { TuiDropdown } from '@taiga-ui/core/directives/dropdown';
import { TuiBadge } from '@taiga-ui/kit/components/badge';
import { TuiDataListWrapper } from '@taiga-ui/kit/components/data-list-wrapper';
import { TuiInputNumber } from '@taiga-ui/kit/components/input-number';
import { TuiSwitch } from '@taiga-ui/kit/components/switch';
import { TuiSelectModule } from '@taiga-ui/legacy/components/select';
import { TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives/textfield-controller';
import { merge, switchMap } from 'rxjs';
import { TuiDocDocumentationPropertyConnector } from './documentation-property-connector.directive';
import { TuiShowCleanerPipe } from './pipes/cleaner.pipe';
import { TuiInspectPipe } from './pipes/inspect.pipe';
import { TuiIsOptionalPipe } from './pipes/optional.pipe';
import { TuiStripOptionalPipe } from './pipes/strip-optional.pipe';
import { TuiDocTypeReferencePipe } from './pipes/type-reference.pipe';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@taiga-ui/kit/components/data-list-wrapper";
import * as i3 from "@taiga-ui/core/components/data-list";
import * as i4 from "@taiga-ui/core/directives/dropdown";
import * as i5 from "@taiga-ui/kit/components/input-number";
import * as i6 from "@taiga-ui/legacy/components/select";
import * as i7 from "@taiga-ui/core/components/textfield";
import * as i8 from "@taiga-ui/legacy/directives/textfield-controller";
// @bad TODO subscribe propertiesConnectors changes
// @bad TODO refactor to make more flexible
class TuiDocDocumentation {
    constructor() {
        this.cdr = inject(ChangeDetectorRef);
        this.destroyRef = inject(DestroyRef);
        this.propertiesConnectors = EMPTY_QUERY;
        this.texts = inject(TUI_DOC_DOCUMENTATION_TEXTS);
        this.excludedProperties = inject(TUI_DOC_EXCLUDED_PROPERTIES);
        this.activeItemIndex = 0;
        this.heading = '';
        this.showValues = true;
        this.isAPI = false;
        this.matcher = (item, exclusions) => !exclusions.has(item.documentationPropertyName);
    }
    ngAfterContentInit() {
        tuiQueryListChanges(this.propertiesConnectors)
            .pipe(switchMap((items) => merge(...items.map(({ changed$ }) => changed$))), tuiWatch(this.cdr), takeUntilDestroyed(this.destroyRef))
            .subscribe();
    }
    get type() {
        return this.isAPI ? this.texts[0] : this.texts[1];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDocDocumentation, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDocDocumentation, isStandalone: true, selector: "tui-doc-documentation", inputs: { heading: "heading", showValues: "showValues", isAPI: "isAPI" }, providers: [tuiScrollbarOptionsProvider({ mode: 'hover' })], queries: [{ propertyName: "propertiesConnectors", predicate: TuiDocDocumentationPropertyConnector }], ngImport: i0, template: "<h1\n    *ngIf=\"heading\"\n    class=\"t-heading\"\n>\n    {{ heading }}\n</h1>\n<ng-content />\n<ng-container *ngIf=\"propertiesConnectors | tuiToArray | tuiFilter: matcher : excludedProperties as properties\">\n    <table\n        *ngIf=\"properties.length\"\n        class=\"t-table\"\n    >\n        <tr class=\"t-row t-row_header\">\n            <th class=\"t-th t-cell t-cell_prop\">{{ texts[2] }}</th>\n            <th class=\"t-th\">{{ type }}</th>\n            <th\n                *ngIf=\"showValues && !isAPI\"\n                class=\"t-th t-cell t-th_value\"\n            >\n                {{ texts[3] }}\n            </th>\n        </tr>\n        <tr\n            *ngFor=\"let propertyConnector of properties\"\n            class=\"t-row\"\n            [class.t-deprecated]=\"propertyConnector.documentationPropertyDeprecated\"\n        >\n            <td class=\"t-cell t-no-overflow\">\n                <div\n                    automation-id=\"tui-documentation__property-name\"\n                    class=\"t-property t-additional-info\"\n                >\n                    <code\n                        *ngIf=\"propertyConnector.attrName\"\n                        class=\"t-property-code\"\n                        [style.color]=\"'var(--tui-background-accent-2-pressed)'\"\n                    >\n                        {{ propertyConnector.attrName | tuiStripOptionalPipe }}\n                    </code>\n                    <tui-badge\n                        *ngIf=\"propertyConnector.attrName | tuiIsOptionalPipe\"\n                        appearance=\"neutral\"\n                        size=\"s\"\n                    >\n                        Optional\n                    </tui-badge>\n                    <tui-badge\n                        *ngIf=\"propertyConnector.documentationPropertyDeprecated\"\n                        appearance=\"negative\"\n                        size=\"s\"\n                    >\n                        Deprecated\n                    </tui-badge>\n                </div>\n                <ng-container [ngTemplateOutlet]=\"propertyConnector.template\" />\n            </td>\n            <td class=\"t-cell t-no-overflow\">\n                <span class=\"type\">\n                    <code class=\"t-code-type\">\n                        <ng-container\n                            *ngFor=\"\n                                let item of propertyConnector.documentationPropertyType | tuiDocTypeReference;\n                                let last = last\n                            \"\n                        >\n                            <a\n                                *ngIf=\"item.reference; else default\"\n                                target=\"_blank\"\n                                class=\"t-code-reference\"\n                                [attr.href]=\"item.reference\"\n                            >\n                                {{ item.type }}\n                            </a>\n                            <ng-template #default>\n                                {{ item.type }}\n                            </ng-template>\n                            <span *ngIf=\"!last\">&nbsp;|&nbsp;</span>\n                        </ng-container>\n                    </code>\n                </span>\n            </td>\n            <td\n                *ngIf=\"showValues\"\n                class=\"t-cell t-cell_value\"\n            >\n                <ng-container *ngIf=\"propertyConnector.shouldShowValues; else elseEmitter\">\n                    <tui-select\n                        *ngIf=\"propertyConnector.hasItems; else noItems\"\n                        tuiDropdownLimitWidth=\"min\"\n                        tuiTextfieldSize=\"m\"\n                        [nativeId]=\"propertyConnector.attrName\"\n                        [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                        [tuiTextfieldCleaner]=\"propertyConnector.documentationPropertyType | tuiShowCleanerPipe\"\n                        [tuiTextfieldLabelOutside]=\"true\"\n                        [valueContent]=\"selectContent\"\n                        (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                    >\n                        <code class=\"t-exception\">null</code>\n                        <tui-data-list-wrapper\n                            *tuiDataList\n                            class=\"t-data-list\"\n                            [itemContent]=\"selectContent\"\n                            [items]=\"propertyConnector.documentationPropertyValues\"\n                        />\n                    </tui-select>\n                    <ng-template\n                        #selectContent\n                        let-data\n                    >\n                        <code>{{ data | tuiInspectAny }}</code>\n                    </ng-template>\n\n                    <ng-template #noItems>\n                        <ng-container [ngSwitch]=\"propertyConnector.documentationPropertyType\">\n                            <input\n                                *ngSwitchCase=\"'boolean'\"\n                                tuiSwitch\n                                type=\"checkbox\"\n                                class=\"t-switch\"\n                                [id]=\"propertyConnector.attrName\"\n                                [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                                [showIcons]=\"true\"\n                                (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                            />\n\n                            <tui-textfield\n                                *ngSwitchCase=\"'string'\"\n                                tuiTextfieldSize=\"m\"\n                            >\n                                <input\n                                    tuiTextfield\n                                    [id]=\"propertyConnector.attrName\"\n                                    [ngModel]=\"propertyConnector.documentationPropertyValue || ''\"\n                                    (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                                />\n                            </tui-textfield>\n\n                            <tui-textfield\n                                *ngSwitchCase=\"'number'\"\n                                tuiTextfieldSize=\"m\"\n                            >\n                                <input\n                                    tuiInputNumber\n                                    [id]=\"propertyConnector.attrName\"\n                                    [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                                    [step]=\"1\"\n                                    (ngModelChange)=\"propertyConnector.onValueChange($event || 0)\"\n                                />\n                            </tui-textfield>\n                        </ng-container>\n                    </ng-template>\n                </ng-container>\n\n                <ng-template #elseEmitter>\n                    <tui-notification\n                        class=\"t-output\"\n                        [@emitEvent]=\"propertyConnector.emits()\"\n                    >\n                        Emit!\n                    </tui-notification>\n                </ng-template>\n            </td>\n        </tr>\n    </table>\n</ng-container>\n", styles: [":host{display:block;min-inline-size:100%}.t-table{inline-size:100%;table-layout:fixed}.t-row:not(:last-child){border-block-end:1px solid var(--tui-border-normal)}@media screen and (max-width: 47.9625em){.t-row{display:flex;flex-wrap:wrap}.t-row_header{display:none}}.t-cell{padding:1rem 1rem .875rem}.t-cell:first-child{padding-left:0}.t-cell:last-child{padding-right:0}.t-cell_prop{inline-size:40%}.t-cell_value{text-align:end}@media screen and (max-width: 47.9625em){.t-cell{inline-size:100%;block-size:auto;padding:.5rem 0;text-align:start}}.t-th{padding:.5rem 1rem;color:var(--tui-text-secondary);font-weight:400;text-align:start}.t-th_value{max-inline-size:20rem;text-align:end}@media screen and (max-width: 47.9625em){.t-th_value{inline-size:9.375rem}}.t-property{font:var(--tui-font-text-m);margin-bottom:.25rem;font-family:monospace;color:#8f75d1}@media screen and (max-width: 47.9625em){.t-property{padding:.5rem 0}}.t-type{font-family:monospace}.t-deprecated .t-property-code{text-decoration:line-through}.t-deprecated-label{margin-right:.125rem;color:var(--tui-text-negative);font-size:.75rem}.t-additional-info{display:flex;gap:.3125rem;align-items:center}.t-exception{display:block;inline-size:-webkit-max-content;inline-size:max-content}.t-output{text-align:start;opacity:0}.t-heading{font:var(--tui-font-heading-4)}.t-code-type{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-start}.t-code-reference{display:inline-flex;color:var(--tui-text-action);text-decoration:none;align-items:center;justify-content:center;gap:3px}.t-code-reference:after{content:\"\";font-size:1rem;inline-size:1rem;block-size:1rem;background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>') center / 100%}.t-switch{display:block}@media not screen and (max-width: 47.9625em){.t-switch{margin-left:auto}}.t-data-list{overflow-wrap:anywhere}@media not screen and (max-width: 47.9625em){.t-data-list{max-inline-size:22.5rem}}.t-no-overflow{overflow:hidden!important}\n"], dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: TuiBadge, selector: "tui-badge,[tuiBadge]", inputs: ["size"] }, { kind: "component", type: i2.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels]), tui-data-list-wrapper:not([labels])[new]", inputs: ["items", "disabledItemHandler", "emptyContent", "size", "itemContent"], outputs: ["itemClick"] }, { kind: "directive", type: i3.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { kind: "pipe", type: TuiDocTypeReferencePipe, name: "tuiDocTypeReference" }, { kind: "directive", type: i4.TuiDropdownOptionsDirective, selector: "[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]", inputs: ["tuiDropdownAlign", "tuiDropdownAppearance", "tuiDropdownDirection", "tuiDropdownLimitWidth", "tuiDropdownMinHeight", "tuiDropdownMaxHeight", "tuiDropdownOffset"] }, { kind: "pipe", type: TuiFilterPipe, name: "tuiFilter" }, { kind: "directive", type: i5.TuiInputNumberDirective, selector: "input[tuiInputNumber]", inputs: ["min", "max", "prefix", "postfix"] }, { kind: "component", type: i5.TuiInputNumberStep, selector: "input[tuiInputNumber][step]", inputs: ["step"] }, { kind: "pipe", type: TuiInspectPipe, name: "tuiInspectAny" }, { kind: "pipe", type: TuiIsOptionalPipe, name: "tuiIsOptionalPipe" }, { kind: "directive", type: TuiNotification, selector: "tui-notification,a[tuiNotification],button[tuiNotification]", inputs: ["appearance", "icon", "size"] }, { kind: "ngmodule", type: TuiSelectModule }, { kind: "component", type: i6.TuiSelectComponent, selector: "tui-select", inputs: ["stringify", "identityMatcher", "valueContent"] }, { kind: "directive", type: i6.TuiSelectDirective, selector: "tui-select" }, { kind: "pipe", type: TuiShowCleanerPipe, name: "tuiShowCleanerPipe" }, { kind: "pipe", type: TuiStripOptionalPipe, name: "tuiStripOptionalPipe" }, { kind: "component", type: TuiSwitch, selector: "input[type=\"checkbox\"][tuiSwitch]", inputs: ["size", "showIcons"] }, { kind: "component", type: i7.TuiTextfieldComponent, selector: "tui-textfield", inputs: ["content", "filler"] }, { kind: "directive", type: i7.TuiTextfieldDirective, selector: "input[tuiTextfield]:not([tuiInputCard]):not([tuiInputExpire]):not([tuiInputCVC])" }, { kind: "directive", type: i7.TuiTextfieldOptionsDirective, selector: "[tuiTextfieldAppearance],[tuiTextfieldSize],[tuiTextfieldCleaner]", inputs: ["tuiTextfieldAppearance", "tuiTextfieldSize", "tuiTextfieldCleaner"] }, { kind: "ngmodule", type: TuiTextfieldControllerModule }, { kind: "directive", type: i8.TuiTextfieldCleanerDirective, selector: "[tuiTextfieldCleaner]", inputs: ["tuiTextfieldCleaner"] }, { kind: "directive", type: i8.TuiTextfieldLabelOutsideDirective, selector: "[tuiTextfieldLabelOutside]", inputs: ["tuiTextfieldLabelOutside"] }, { kind: "directive", type: i8.TuiTextfieldSizeDirective, selector: "[tuiTextfieldSize]", inputs: ["tuiTextfieldSize"] }, { kind: "pipe", type: TuiToArrayPipe, name: "tuiToArray" }], animations: [
            trigger('emitEvent', [
                transition(':increment', [style({ opacity: 1 }), animate('500ms ease-in')]),
            ]),
        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiDocDocumentation };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDocDocumentation, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-doc-documentation', imports: [
                        FormsModule,
                        NgForOf,
                        NgIf,
                        NgSwitch,
                        NgSwitchCase,
                        NgTemplateOutlet,
                        TuiBadge,
                        TuiDataListWrapper,
                        TuiDocTypeReferencePipe,
                        TuiDropdown,
                        TuiFilterPipe,
                        TuiInputNumber,
                        TuiInspectPipe,
                        TuiIsOptionalPipe,
                        TuiNotification,
                        TuiSelectModule,
                        TuiShowCleanerPipe,
                        TuiStripOptionalPipe,
                        TuiSwitch,
                        TuiTextfield,
                        TuiTextfieldControllerModule,
                        TuiToArrayPipe,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, providers: [tuiScrollbarOptionsProvider({ mode: 'hover' })], animations: [
                        trigger('emitEvent', [
                            transition(':increment', [style({ opacity: 1 }), animate('500ms ease-in')]),
                        ]),
                    ], template: "<h1\n    *ngIf=\"heading\"\n    class=\"t-heading\"\n>\n    {{ heading }}\n</h1>\n<ng-content />\n<ng-container *ngIf=\"propertiesConnectors | tuiToArray | tuiFilter: matcher : excludedProperties as properties\">\n    <table\n        *ngIf=\"properties.length\"\n        class=\"t-table\"\n    >\n        <tr class=\"t-row t-row_header\">\n            <th class=\"t-th t-cell t-cell_prop\">{{ texts[2] }}</th>\n            <th class=\"t-th\">{{ type }}</th>\n            <th\n                *ngIf=\"showValues && !isAPI\"\n                class=\"t-th t-cell t-th_value\"\n            >\n                {{ texts[3] }}\n            </th>\n        </tr>\n        <tr\n            *ngFor=\"let propertyConnector of properties\"\n            class=\"t-row\"\n            [class.t-deprecated]=\"propertyConnector.documentationPropertyDeprecated\"\n        >\n            <td class=\"t-cell t-no-overflow\">\n                <div\n                    automation-id=\"tui-documentation__property-name\"\n                    class=\"t-property t-additional-info\"\n                >\n                    <code\n                        *ngIf=\"propertyConnector.attrName\"\n                        class=\"t-property-code\"\n                        [style.color]=\"'var(--tui-background-accent-2-pressed)'\"\n                    >\n                        {{ propertyConnector.attrName | tuiStripOptionalPipe }}\n                    </code>\n                    <tui-badge\n                        *ngIf=\"propertyConnector.attrName | tuiIsOptionalPipe\"\n                        appearance=\"neutral\"\n                        size=\"s\"\n                    >\n                        Optional\n                    </tui-badge>\n                    <tui-badge\n                        *ngIf=\"propertyConnector.documentationPropertyDeprecated\"\n                        appearance=\"negative\"\n                        size=\"s\"\n                    >\n                        Deprecated\n                    </tui-badge>\n                </div>\n                <ng-container [ngTemplateOutlet]=\"propertyConnector.template\" />\n            </td>\n            <td class=\"t-cell t-no-overflow\">\n                <span class=\"type\">\n                    <code class=\"t-code-type\">\n                        <ng-container\n                            *ngFor=\"\n                                let item of propertyConnector.documentationPropertyType | tuiDocTypeReference;\n                                let last = last\n                            \"\n                        >\n                            <a\n                                *ngIf=\"item.reference; else default\"\n                                target=\"_blank\"\n                                class=\"t-code-reference\"\n                                [attr.href]=\"item.reference\"\n                            >\n                                {{ item.type }}\n                            </a>\n                            <ng-template #default>\n                                {{ item.type }}\n                            </ng-template>\n                            <span *ngIf=\"!last\">&nbsp;|&nbsp;</span>\n                        </ng-container>\n                    </code>\n                </span>\n            </td>\n            <td\n                *ngIf=\"showValues\"\n                class=\"t-cell t-cell_value\"\n            >\n                <ng-container *ngIf=\"propertyConnector.shouldShowValues; else elseEmitter\">\n                    <tui-select\n                        *ngIf=\"propertyConnector.hasItems; else noItems\"\n                        tuiDropdownLimitWidth=\"min\"\n                        tuiTextfieldSize=\"m\"\n                        [nativeId]=\"propertyConnector.attrName\"\n                        [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                        [tuiTextfieldCleaner]=\"propertyConnector.documentationPropertyType | tuiShowCleanerPipe\"\n                        [tuiTextfieldLabelOutside]=\"true\"\n                        [valueContent]=\"selectContent\"\n                        (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                    >\n                        <code class=\"t-exception\">null</code>\n                        <tui-data-list-wrapper\n                            *tuiDataList\n                            class=\"t-data-list\"\n                            [itemContent]=\"selectContent\"\n                            [items]=\"propertyConnector.documentationPropertyValues\"\n                        />\n                    </tui-select>\n                    <ng-template\n                        #selectContent\n                        let-data\n                    >\n                        <code>{{ data | tuiInspectAny }}</code>\n                    </ng-template>\n\n                    <ng-template #noItems>\n                        <ng-container [ngSwitch]=\"propertyConnector.documentationPropertyType\">\n                            <input\n                                *ngSwitchCase=\"'boolean'\"\n                                tuiSwitch\n                                type=\"checkbox\"\n                                class=\"t-switch\"\n                                [id]=\"propertyConnector.attrName\"\n                                [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                                [showIcons]=\"true\"\n                                (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                            />\n\n                            <tui-textfield\n                                *ngSwitchCase=\"'string'\"\n                                tuiTextfieldSize=\"m\"\n                            >\n                                <input\n                                    tuiTextfield\n                                    [id]=\"propertyConnector.attrName\"\n                                    [ngModel]=\"propertyConnector.documentationPropertyValue || ''\"\n                                    (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                                />\n                            </tui-textfield>\n\n                            <tui-textfield\n                                *ngSwitchCase=\"'number'\"\n                                tuiTextfieldSize=\"m\"\n                            >\n                                <input\n                                    tuiInputNumber\n                                    [id]=\"propertyConnector.attrName\"\n                                    [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                                    [step]=\"1\"\n                                    (ngModelChange)=\"propertyConnector.onValueChange($event || 0)\"\n                                />\n                            </tui-textfield>\n                        </ng-container>\n                    </ng-template>\n                </ng-container>\n\n                <ng-template #elseEmitter>\n                    <tui-notification\n                        class=\"t-output\"\n                        [@emitEvent]=\"propertyConnector.emits()\"\n                    >\n                        Emit!\n                    </tui-notification>\n                </ng-template>\n            </td>\n        </tr>\n    </table>\n</ng-container>\n", styles: [":host{display:block;min-inline-size:100%}.t-table{inline-size:100%;table-layout:fixed}.t-row:not(:last-child){border-block-end:1px solid var(--tui-border-normal)}@media screen and (max-width: 47.9625em){.t-row{display:flex;flex-wrap:wrap}.t-row_header{display:none}}.t-cell{padding:1rem 1rem .875rem}.t-cell:first-child{padding-left:0}.t-cell:last-child{padding-right:0}.t-cell_prop{inline-size:40%}.t-cell_value{text-align:end}@media screen and (max-width: 47.9625em){.t-cell{inline-size:100%;block-size:auto;padding:.5rem 0;text-align:start}}.t-th{padding:.5rem 1rem;color:var(--tui-text-secondary);font-weight:400;text-align:start}.t-th_value{max-inline-size:20rem;text-align:end}@media screen and (max-width: 47.9625em){.t-th_value{inline-size:9.375rem}}.t-property{font:var(--tui-font-text-m);margin-bottom:.25rem;font-family:monospace;color:#8f75d1}@media screen and (max-width: 47.9625em){.t-property{padding:.5rem 0}}.t-type{font-family:monospace}.t-deprecated .t-property-code{text-decoration:line-through}.t-deprecated-label{margin-right:.125rem;color:var(--tui-text-negative);font-size:.75rem}.t-additional-info{display:flex;gap:.3125rem;align-items:center}.t-exception{display:block;inline-size:-webkit-max-content;inline-size:max-content}.t-output{text-align:start;opacity:0}.t-heading{font:var(--tui-font-heading-4)}.t-code-type{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-start}.t-code-reference{display:inline-flex;color:var(--tui-text-action);text-decoration:none;align-items:center;justify-content:center;gap:3px}.t-code-reference:after{content:\"\";font-size:1rem;inline-size:1rem;block-size:1rem;background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>') center / 100%}.t-switch{display:block}@media not screen and (max-width: 47.9625em){.t-switch{margin-left:auto}}.t-data-list{overflow-wrap:anywhere}@media not screen and (max-width: 47.9625em){.t-data-list{max-inline-size:22.5rem}}.t-no-overflow{overflow:hidden!important}\n"] }]
        }], propDecorators: { propertiesConnectors: [{
                type: ContentChildren,
                args: [TuiDocDocumentationPropertyConnector]
            }], heading: [{
                type: Input
            }], showValues: [{
                type: Input
            }], isAPI: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,