import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, inject, Input, ViewChild, } from '@angular/core';
import { maskitoNumberOptionsGenerator } from '@maskito/kit';
import { TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';
import { MAX_YEAR, MIN_YEAR } from '@taiga-ui/cdk/date-time';
import { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';
import { AbstractTuiNullableControl, tuiAsControl } from '@taiga-ui/legacy/classes';
import { TuiPrimitiveTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';
import { TUI_TEXTFIELD_SIZE } from '@taiga-ui/legacy/directives';
import { tuiAsFocusableItemAccessor } from '@taiga-ui/legacy/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@maskito/angular";
import * as i2 from "@taiga-ui/core/directives/dropdown";
import * as i3 from "@taiga-ui/legacy/components/primitive-textfield";
import * as i4 from "@taiga-ui/core/components/scrollbar";
import * as i5 from "@taiga-ui/core/components/calendar";
import * as i6 from "@taiga-ui/legacy/directives";
const UP_TO_4_DIGITS_REG = /^\d{0,4}$/;
class TuiInputYearComponent extends AbstractTuiNullableControl {
    constructor() {
        super(...arguments);
        this.options = inject(TUI_INPUT_DATE_OPTIONS);
        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);
        this.open = false;
        this.initialItem = new Date().getFullYear();
        this.min = this.options.min.year;
        this.max = this.options.max.year;
        this.disabledItemHandler = TUI_FALSE_HANDLER;
        this.nativeValue = '';
    }
    get nativeFocusableElement() {
        return this.textfield?.nativeFocusableElement || null;
    }
    get focused() {
        return !!this.textfield?.focused;
    }
    onValueChange(value) {
        this.value = value ? Number(value) : null;
    }
    writeValue(value) {
        super.writeValue(value);
        this.updateNativeValue(this.value);
    }
    get size() {
        return this.textfieldSize.size;
    }
    get calendarIcon() {
        return this.options.icon;
    }
    getMaskOptions(min, max) {
        return {
            ...maskitoNumberOptionsGenerator({
                min: min ?? MIN_YEAR,
                max: max ?? MAX_YEAR,
                thousandSeparator: '',
            }),
            mask: UP_TO_4_DIGITS_REG,
        };
    }
    onYearClick(year) {
        this.value = year;
        this.updateNativeValue(year);
        this.onOpenChange(false);
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onOpenChange(open) {
        this.open = open;
    }
    toggle() {
        this.open = !this.open;
    }
    updateNativeValue(value) {
        this.nativeValue = value?.toString() || '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputYearComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiInputYearComponent, selector: "tui-input-year", inputs: { min: "min", max: "max", disabledItemHandler: "disabledItemHandler" }, host: { properties: { "attr.data-size": "size" } }, providers: [
            tuiAsFocusableItemAccessor(TuiInputYearComponent),
            tuiAsControl(TuiInputYearComponent),
        ], viewQueries: [{ propertyName: "textfield", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-primitive-textfield\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [invalid]=\"computedInvalid\"\n    [maskito]=\"getMaskOptions(min, max)\"\n    [nativeId]=\"nativeId\"\n    [pseudoFocus]=\"pseudoFocus\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [tuiDropdown]=\"dropdown\"\n    [tuiDropdownEnabled]=\"interactive\"\n    [tuiDropdownOpen]=\"open && interactive\"\n    [tuiTextfieldIcon]=\"calendarIcon\"\n    [(value)]=\"nativeValue\"\n    (click)=\"toggle()\"\n    (focusedChange)=\"onFocused($event)\"\n    (tuiDropdownOpenChange)=\"onOpenChange($event)\"\n    (valueChange)=\"onValueChange($event)\"\n>\n    <ng-content />\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    />\n</tui-primitive-textfield>\n\n<ng-template #dropdown>\n    <div class=\"t-container\">\n        <tui-scrollbar class=\"t-scrollbar\">\n            <tui-calendar-year\n                [disabledItemHandler]=\"disabledItemHandler\"\n                [initialItem]=\"value || initialItem\"\n                [max]=\"max\"\n                [min]=\"min\"\n                [value]=\"value === null ? null : value\"\n                (mousedown.prevent.zoneless)=\"(0)\"\n                (yearClick)=\"onYearClick($event)\"\n            />\n        </tui-scrollbar>\n    </div>\n</ng-template>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-container{inline-size:15.75rem;padding:1rem 1.125rem}.t-scrollbar{max-block-size:18.25rem;inline-size:16.875rem}.t-textfield{border-radius:inherit;text-align:inherit}\n"], dependencies: [{ kind: "directive", type: i1.MaskitoDirective, selector: "[maskito]", inputs: ["maskito", "maskitoElement"] }, { kind: "directive", type: i2.TuiDropdownOpen, selector: "[tuiDropdown][tuiDropdownOpen],[tuiDropdown][tuiDropdownOpenChange]", inputs: ["tuiDropdownEnabled", "tuiDropdownOpen"], outputs: ["tuiDropdownOpenChange"] }, { kind: "component", type: i3.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "iconCleaner", "readOnly", "invalid", "disabled", "value"], outputs: ["valueChange"] }, { kind: "directive", type: i3.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { kind: "component", type: i4.TuiScrollbar, selector: "tui-scrollbar", inputs: ["hidden"] }, { kind: "component", type: i5.TuiCalendarYear, selector: "tui-calendar-year", inputs: ["value", "initialItem", "min", "max", "disabledItemHandler"], outputs: ["yearClick"] }, { kind: "directive", type: i6.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }, { kind: "directive", type: i2.TuiDropdownDirective, selector: "[tuiDropdown]:not(ng-container):not(ng-template)", inputs: ["tuiDropdown"], exportAs: ["tuiDropdown"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
__decorate([
    tuiPure
], TuiInputYearComponent.prototype, "getMaskOptions", null);
export { TuiInputYearComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputYearComponent, decorators: [{
            type: Component,
            args: [{ standalone: false, selector: 'tui-input-year', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        tuiAsFocusableItemAccessor(TuiInputYearComponent),
                        tuiAsControl(TuiInputYearComponent),
                    ], host: {
                        '[attr.data-size]': 'size',
                    }, template: "<tui-primitive-textfield\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [invalid]=\"computedInvalid\"\n    [maskito]=\"getMaskOptions(min, max)\"\n    [nativeId]=\"nativeId\"\n    [pseudoFocus]=\"pseudoFocus\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [tuiDropdown]=\"dropdown\"\n    [tuiDropdownEnabled]=\"interactive\"\n    [tuiDropdownOpen]=\"open && interactive\"\n    [tuiTextfieldIcon]=\"calendarIcon\"\n    [(value)]=\"nativeValue\"\n    (click)=\"toggle()\"\n    (focusedChange)=\"onFocused($event)\"\n    (tuiDropdownOpenChange)=\"onOpenChange($event)\"\n    (valueChange)=\"onValueChange($event)\"\n>\n    <ng-content />\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    />\n</tui-primitive-textfield>\n\n<ng-template #dropdown>\n    <div class=\"t-container\">\n        <tui-scrollbar class=\"t-scrollbar\">\n            <tui-calendar-year\n                [disabledItemHandler]=\"disabledItemHandler\"\n                [initialItem]=\"value || initialItem\"\n                [max]=\"max\"\n                [min]=\"min\"\n                [value]=\"value === null ? null : value\"\n                (mousedown.prevent.zoneless)=\"(0)\"\n                (yearClick)=\"onYearClick($event)\"\n            />\n        </tui-scrollbar>\n    </div>\n</ng-template>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-container{inline-size:15.75rem;padding:1rem 1.125rem}.t-scrollbar{max-block-size:18.25rem;inline-size:16.875rem}.t-textfield{border-radius:inherit;text-align:inherit}\n"] }]
        }], propDecorators: { textfield: [{
                type: ViewChild,
                args: [TuiPrimitiveTextfieldComponent]
            }], min: [{
                type: Input
            }], max: [{
                type: Input
            }], disabledItemHandler: [{
                type: Input
            }], getMaskOptions: [] } });
//# sourceMappingURL=data:application/json;base64,