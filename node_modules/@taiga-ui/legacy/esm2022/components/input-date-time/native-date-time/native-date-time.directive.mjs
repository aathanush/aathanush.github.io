import { Directive, inject } from '@angular/core';
import { TuiDay, TuiTime } from '@taiga-ui/cdk/date-time';
import { TuiInputDateTimeDirective } from '../input-date-time.directive';
import * as i0 from "@angular/core";
class TuiNativeDateTimeDirective {
    constructor() {
        this.host = inject(TuiInputDateTimeDirective);
    }
    get value() {
        if (!this.host.rawValue?.[0] || !this.host.rawValue?.[1]) {
            return '';
        }
        return `${this.host.rawValue[0]?.toString('YMD', '-')}T${this.host.rawValue[1]?.toString('HH:MM')}`;
    }
    onChange(value) {
        if (!value) {
            this.host.writeValue(null);
            return;
        }
        const date = new Date(value);
        const day = TuiDay.fromLocalNativeDate(date);
        const time = TuiTime.fromLocalNativeDate(date);
        this.host.writeValue([day, time]);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateTimeDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiNativeDateTimeDirective, selector: "input[tuiDateTime]", host: { attributes: { "type": "datetime-local" }, listeners: { "change.stop": "onChange($event.target.value)", "input.stop": "onChange($event.target.value)", "click.stop.zoneless": "0", "mousedown.stop.zoneless": "0" }, properties: { "tabIndex": "-1", "value": "value" } }, ngImport: i0 }); }
}
export { TuiNativeDateTimeDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateTimeDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: false,
                    selector: 'input[tuiDateTime]',
                    host: {
                        type: 'datetime-local',
                        '[tabIndex]': '-1',
                        '[value]': 'value',
                        '(change.stop)': 'onChange($event.target.value)',
                        '(input.stop)': 'onChange($event.target.value)',
                        '(click.stop.zoneless)': '0',
                        '(mousedown.stop.zoneless)': '0',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRhdGUtdGltZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9pbnB1dC1kYXRlLXRpbWUvbmF0aXZlLWRhdGUtdGltZS9uYXRpdmUtZGF0ZS10aW1lLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNoRCxPQUFPLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRXhELE9BQU8sRUFBQyx5QkFBeUIsRUFBQyxNQUFNLDhCQUE4QixDQUFDOztBQUV2RSxNQWFhLDBCQUEwQjtJQWJ2QztRQWN1QixTQUFJLEdBQUcsTUFBTSxDQUFDLHlCQUF5QixDQUFDLENBQUM7S0EwQi9EO0lBeEJHLElBQWMsS0FBSztRQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUN0RCxPQUFPLEVBQUUsQ0FBQztTQUNiO1FBRUQsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FDckMsS0FBSyxFQUNMLEdBQUcsQ0FDTixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0lBQ3BELENBQUM7SUFFUyxRQUFRLENBQUMsS0FBYTtRQUM1QixJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFM0IsT0FBTztTQUNWO1FBRUQsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0IsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUUvQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7K0dBMUJRLDBCQUEwQjttR0FBMUIsMEJBQTBCOztTQUExQiwwQkFBMEI7NEZBQTFCLDBCQUEwQjtrQkFidEMsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsS0FBSztvQkFDakIsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsSUFBSSxFQUFFO3dCQUNGLElBQUksRUFBRSxnQkFBZ0I7d0JBQ3RCLFlBQVksRUFBRSxJQUFJO3dCQUNsQixTQUFTLEVBQUUsT0FBTzt3QkFDbEIsZUFBZSxFQUFFLCtCQUErQjt3QkFDaEQsY0FBYyxFQUFFLCtCQUErQjt3QkFDL0MsdUJBQXVCLEVBQUUsR0FBRzt3QkFDNUIsMkJBQTJCLEVBQUUsR0FBRztxQkFDbkM7aUJBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgaW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpRGF5LCBUdWlUaW1lfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2RhdGUtdGltZSc7XG5cbmltcG9ydCB7VHVpSW5wdXREYXRlVGltZURpcmVjdGl2ZX0gZnJvbSAnLi4vaW5wdXQtZGF0ZS10aW1lLmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHN0YW5kYWxvbmU6IGZhbHNlLFxuICAgIHNlbGVjdG9yOiAnaW5wdXRbdHVpRGF0ZVRpbWVdJyxcbiAgICBob3N0OiB7XG4gICAgICAgIHR5cGU6ICdkYXRldGltZS1sb2NhbCcsXG4gICAgICAgICdbdGFiSW5kZXhdJzogJy0xJyxcbiAgICAgICAgJ1t2YWx1ZV0nOiAndmFsdWUnLFxuICAgICAgICAnKGNoYW5nZS5zdG9wKSc6ICdvbkNoYW5nZSgkZXZlbnQudGFyZ2V0LnZhbHVlKScsXG4gICAgICAgICcoaW5wdXQuc3RvcCknOiAnb25DaGFuZ2UoJGV2ZW50LnRhcmdldC52YWx1ZSknLFxuICAgICAgICAnKGNsaWNrLnN0b3Auem9uZWxlc3MpJzogJzAnLFxuICAgICAgICAnKG1vdXNlZG93bi5zdG9wLnpvbmVsZXNzKSc6ICcwJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlOYXRpdmVEYXRlVGltZURpcmVjdGl2ZSB7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGhvc3QgPSBpbmplY3QoVHVpSW5wdXREYXRlVGltZURpcmVjdGl2ZSk7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5ob3N0LnJhd1ZhbHVlPy5bMF0gfHwgIXRoaXMuaG9zdC5yYXdWYWx1ZT8uWzFdKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYCR7dGhpcy5ob3N0LnJhd1ZhbHVlWzBdPy50b1N0cmluZyhcbiAgICAgICAgICAgICdZTUQnLFxuICAgICAgICAgICAgJy0nLFxuICAgICAgICApfVQke3RoaXMuaG9zdC5yYXdWYWx1ZVsxXT8udG9TdHJpbmcoJ0hIOk1NJyl9YDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25DaGFuZ2UodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLmhvc3Qud3JpdGVWYWx1ZShudWxsKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHZhbHVlKTtcbiAgICAgICAgY29uc3QgZGF5ID0gVHVpRGF5LmZyb21Mb2NhbE5hdGl2ZURhdGUoZGF0ZSk7XG4gICAgICAgIGNvbnN0IHRpbWUgPSBUdWlUaW1lLmZyb21Mb2NhbE5hdGl2ZURhdGUoZGF0ZSk7XG5cbiAgICAgICAgdGhpcy5ob3N0LndyaXRlVmFsdWUoW2RheSwgdGltZV0pO1xuICAgIH1cbn1cbiJdfQ==