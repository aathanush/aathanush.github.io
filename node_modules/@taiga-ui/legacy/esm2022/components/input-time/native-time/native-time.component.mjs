import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { tuiInjectId } from '@taiga-ui/cdk/services';
import { TuiInputTimeDirective } from '../input-time.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class TuiNativeTimeComponent {
    constructor() {
        this.host = inject(TuiInputTimeDirective);
        this.autoId = tuiInjectId();
    }
    get items() {
        return this.host.items.map((item) => item.toString(this.host.mode));
    }
    get value() {
        return this.host.value.length === this.host.mode.length ? this.host.value : '';
    }
    get step() {
        switch (this.host.mode) {
            case 'HH:MM:SS':
                return 1;
            case 'HH:MM:SS.MSS':
                return 0.001;
            default:
                return 60;
        }
    }
    onChange(value) {
        this.host.onValueChange(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeTimeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiNativeTimeComponent, selector: "input[tuiTime]", host: { attributes: { "type": "time" }, listeners: { "change.stop": "onChange($event.target.value)", "click.stop.zoneless": "0", "mousedown.stop.zoneless": "0" }, properties: { "attr.list": "autoId", "tabIndex": "-1", "value": "value", "step": "step" } }, ngImport: i0, template: `
        <datalist
            *ngIf="items.length"
            [id]="autoId"
        >
            <option
                *ngFor="let item of items"
                value="{{ item }}"
            ></option>
        </datalist>
    `, isInline: true, styles: [":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0;pointer-events:auto;font-size:2rem}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiNativeTimeComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeTimeComponent, decorators: [{
            type: Component,
            args: [{ standalone: false, selector: 'input[tuiTime]', template: `
        <datalist
            *ngIf="items.length"
            [id]="autoId"
        >
            <option
                *ngFor="let item of items"
                value="{{ item }}"
            ></option>
        </datalist>
    `, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        type: 'time',
                        '[attr.list]': 'autoId',
                        '[tabIndex]': '-1',
                        '[value]': 'value',
                        '[step]': 'step',
                        '(change.stop)': 'onChange($event.target.value)',
                        '(click.stop.zoneless)': '0',
                        '(mousedown.stop.zoneless)': '0',
                    }, styles: [":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0;pointer-events:auto;font-size:2rem}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXRpbWUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvaW5wdXQtdGltZS9uYXRpdmUtdGltZS9uYXRpdmUtdGltZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRW5ELE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDOzs7QUFFOUQsTUEyQmEsc0JBQXNCO0lBM0JuQztRQTRCdUIsU0FBSSxHQUFHLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBRXJDLFdBQU0sR0FBRyxXQUFXLEVBQUUsQ0FBQztLQXdCN0M7SUF0QkcsSUFBYyxLQUFLO1FBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFRCxJQUFjLEtBQUs7UUFDZixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDbkYsQ0FBQztJQUVELElBQWMsSUFBSTtRQUNkLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDcEIsS0FBSyxVQUFVO2dCQUNYLE9BQU8sQ0FBQyxDQUFDO1lBQ2IsS0FBSyxjQUFjO2dCQUNmLE9BQU8sS0FBSyxDQUFDO1lBQ2pCO2dCQUNJLE9BQU8sRUFBRSxDQUFDO1NBQ2pCO0lBQ0wsQ0FBQztJQUVTLFFBQVEsQ0FBQyxLQUFhO1FBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7K0dBMUJRLHNCQUFzQjttR0FBdEIsc0JBQXNCLHNUQXhCckI7Ozs7Ozs7Ozs7S0FVVDs7U0FjUSxzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkEzQmxDLFNBQVM7aUNBQ00sS0FBSyxZQUNQLGdCQUFnQixZQUNoQjs7Ozs7Ozs7OztLQVVULG1CQUVnQix1QkFBdUIsQ0FBQyxNQUFNLFFBQ3pDO3dCQUNGLElBQUksRUFBRSxNQUFNO3dCQUNaLGFBQWEsRUFBRSxRQUFRO3dCQUN2QixZQUFZLEVBQUUsSUFBSTt3QkFDbEIsU0FBUyxFQUFFLE9BQU87d0JBQ2xCLFFBQVEsRUFBRSxNQUFNO3dCQUNoQixlQUFlLEVBQUUsK0JBQStCO3dCQUNoRCx1QkFBdUIsRUFBRSxHQUFHO3dCQUM1QiwyQkFBMkIsRUFBRSxHQUFHO3FCQUNuQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgaW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpSW5qZWN0SWR9IGZyb20gJ0B0YWlnYS11aS9jZGsvc2VydmljZXMnO1xuXG5pbXBvcnQge1R1aUlucHV0VGltZURpcmVjdGl2ZX0gZnJvbSAnLi4vaW5wdXQtdGltZS5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiBmYWxzZSxcbiAgICBzZWxlY3RvcjogJ2lucHV0W3R1aVRpbWVdJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGF0YWxpc3RcbiAgICAgICAgICAgICpuZ0lmPVwiaXRlbXMubGVuZ3RoXCJcbiAgICAgICAgICAgIFtpZF09XCJhdXRvSWRcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8b3B0aW9uXG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgaXRlbXNcIlxuICAgICAgICAgICAgICAgIHZhbHVlPVwie3sgaXRlbSB9fVwiXG4gICAgICAgICAgICA+PC9vcHRpb24+XG4gICAgICAgIDwvZGF0YWxpc3Q+XG4gICAgYCxcbiAgICBzdHlsZVVybHM6IFsnLi9uYXRpdmUtdGltZS5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgaG9zdDoge1xuICAgICAgICB0eXBlOiAndGltZScsXG4gICAgICAgICdbYXR0ci5saXN0XSc6ICdhdXRvSWQnLFxuICAgICAgICAnW3RhYkluZGV4XSc6ICctMScsXG4gICAgICAgICdbdmFsdWVdJzogJ3ZhbHVlJyxcbiAgICAgICAgJ1tzdGVwXSc6ICdzdGVwJyxcbiAgICAgICAgJyhjaGFuZ2Uuc3RvcCknOiAnb25DaGFuZ2UoJGV2ZW50LnRhcmdldC52YWx1ZSknLFxuICAgICAgICAnKGNsaWNrLnN0b3Auem9uZWxlc3MpJzogJzAnLFxuICAgICAgICAnKG1vdXNlZG93bi5zdG9wLnpvbmVsZXNzKSc6ICcwJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlOYXRpdmVUaW1lQ29tcG9uZW50IHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgaG9zdCA9IGluamVjdChUdWlJbnB1dFRpbWVEaXJlY3RpdmUpO1xuXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGF1dG9JZCA9IHR1aUluamVjdElkKCk7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IGl0ZW1zKCk6IHN0cmluZ1tdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdC5pdGVtcy5tYXAoKGl0ZW0pID0+IGl0ZW0udG9TdHJpbmcodGhpcy5ob3N0Lm1vZGUpKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmhvc3QudmFsdWUubGVuZ3RoID09PSB0aGlzLmhvc3QubW9kZS5sZW5ndGggPyB0aGlzLmhvc3QudmFsdWUgOiAnJztcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IHN0ZXAoKTogbnVtYmVyIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLmhvc3QubW9kZSkge1xuICAgICAgICAgICAgY2FzZSAnSEg6TU06U1MnOlxuICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgY2FzZSAnSEg6TU06U1MuTVNTJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gMC4wMDE7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiA2MDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkNoYW5nZSh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaG9zdC5vblZhbHVlQ2hhbmdlKHZhbHVlKTtcbiAgICB9XG59XG4iXX0=