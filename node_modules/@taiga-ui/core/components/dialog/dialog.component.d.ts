import type { TuiPopover } from '@taiga-ui/cdk/services';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import type { Observable } from 'rxjs';
import { Subject } from 'rxjs';
import type { TuiDialogOptions, TuiDialogSize } from './dialog.interfaces';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/directives/animated";
export declare class TuiDialogComponent<O, I> {
    protected readonly close$: Subject<void>;
    protected readonly context: TuiPopover<TuiDialogOptions<I>, O>;
    protected readonly closeWord$: Observable<string>;
    protected readonly icons: import("@taiga-ui/core/tokens").TuiCommonIcons;
    protected readonly from: import("@angular/core").Signal<"translateY(100vh)" | "translateY(2.5rem)">;
    protected readonly isMobile: import("@angular/core").Signal<boolean | undefined>;
    constructor();
    protected get size(): TuiDialogSize;
    protected get header(): PolymorpheusContent<TuiPopover<TuiDialogOptions<I>, O>>;
    private close;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDialogComponent<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDialogComponent<any, any>, "tui-dialog", never, {}, {}, never, never, true, [{ directive: typeof i1.TuiAnimated; inputs: {}; outputs: {}; }]>;
}
