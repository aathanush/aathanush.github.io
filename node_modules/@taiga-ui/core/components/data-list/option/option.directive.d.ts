import type { OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/directives/icons";
export declare class TuiOptionNew<T = unknown> implements OnDestroy {
    private readonly vcr;
    private readonly isMobile;
    private readonly el;
    private readonly dataList;
    private readonly content;
    private readonly ref;
    protected readonly dropdown: import("@angular/core").WritableSignal<import("@angular/core").ComponentRef<unknown> | null> | undefined;
    disabled: boolean;
    constructor();
    ngOnDestroy(): void;
    protected onMouseMove(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiOptionNew<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiOptionNew<any>, "button[tuiOption][new], a[tuiOption][new], label[tuiOption][new]", never, { "disabled": { "alias": "disabled"; "required": false; }; }, {}, never, never, true, [{ directive: typeof i1.TuiWithIcons; inputs: {}; outputs: {}; }]>;
}
export declare class TuiOptionWithValue<T = unknown> {
    disabled: boolean;
    readonly value: import("@angular/core").WritableSignal<T | undefined>;
    set valueSetter(x: T);
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiOptionWithValue<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiOptionWithValue<any>, "button[tuiOption][value][new], a[tuiOption][value][new], label[tuiOption][value][new]", never, { "disabled": { "alias": "disabled"; "required": false; }; "valueSetter": { "alias": "value"; "required": true; }; }, {}, never, never, true, never>;
}
