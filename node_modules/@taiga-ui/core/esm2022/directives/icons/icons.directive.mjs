import { ChangeDetectionStrategy, Component, Directive, inject, Input, signal, ViewEncapsulation, } from '@angular/core';
import { tuiWithStyles } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_ICON_END, TUI_ICON_START, tuiInjectIconResolver } from '@taiga-ui/core/tokens';
import * as i0 from "@angular/core";
class TuiIconsStyles {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIconsStyles, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiIconsStyles, isStandalone: true, selector: "ng-component", host: { classAttribute: "tui-icons" }, ngImport: i0, template: '', isInline: true, styles: ["[tuiIcons]{--t-icon-start: none;--t-icon-end: none}[tuiIcons]:before,[tuiIcons]:after{content:\"\";display:var(--t-icon-start);inline-size:1em;block-size:1em;line-height:1em;font-size:1.5rem;flex-shrink:0;background:currentColor;-webkit-mask:var(--t-icon-start) no-repeat center / contain padding-box;mask:var(--t-icon-start) no-repeat center / contain padding-box}[tuiIcons]:after{display:var(--t-icon-end);-webkit-mask:var(--t-icon-end) no-repeat center / contain padding-box;mask:var(--t-icon-end) no-repeat center / contain padding-box}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIconsStyles, decorators: [{
            type: Component,
            args: [{ standalone: true, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        class: 'tui-icons',
                    }, styles: ["[tuiIcons]{--t-icon-start: none;--t-icon-end: none}[tuiIcons]:before,[tuiIcons]:after{content:\"\";display:var(--t-icon-start);inline-size:1em;block-size:1em;line-height:1em;font-size:1.5rem;flex-shrink:0;background:currentColor;-webkit-mask:var(--t-icon-start) no-repeat center / contain padding-box;mask:var(--t-icon-start) no-repeat center / contain padding-box}[tuiIcons]:after{display:var(--t-icon-end);-webkit-mask:var(--t-icon-end) no-repeat center / contain padding-box;mask:var(--t-icon-end) no-repeat center / contain padding-box}\n"] }]
        }] });
class TuiIcons {
    constructor() {
        this.resolver = tuiInjectIconResolver();
        this.nothing = tuiWithStyles(TuiIconsStyles);
        this.iconStart = signal(inject(TUI_ICON_START, { self: true, optional: true }) || '');
        this.iconEnd = signal(inject(TUI_ICON_END, { self: true, optional: true }) || '');
    }
    // TODO(v5): use signal inputs
    set iconStartSetter(x) {
        this.iconStart.set(x);
    }
    // TODO(v5): use signal inputs
    set iconEndSetter(x) {
        this.iconEnd.set(x);
    }
    resolve(icon) {
        return icon ? `url(${this.resolver(icon.toString())})` : null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIcons, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiIcons, isStandalone: true, inputs: { iconStartSetter: ["iconStart", "iconStartSetter"], iconEndSetter: ["iconEnd", "iconEndSetter"] }, host: { attributes: { "tuiIcons": "" }, properties: { "style.--t-icon-start": "resolve(iconStart())", "style.--t-icon-end": "resolve(iconEnd())" } }, ngImport: i0 }); }
}
export { TuiIcons };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIcons, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    host: {
                        tuiIcons: '',
                        '[style.--t-icon-start]': 'resolve(iconStart())',
                        '[style.--t-icon-end]': 'resolve(iconEnd())',
                    },
                }]
        }], propDecorators: { iconStartSetter: [{
                type: Input,
                args: ['iconStart']
            }], iconEndSetter: [{
                type: Input,
                args: ['iconEnd']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbnMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9kaXJlY3RpdmVzL2ljb25zL2ljb25zLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxTQUFTLEVBQ1QsTUFBTSxFQUNOLEtBQUssRUFDTCxNQUFNLEVBQ04saUJBQWlCLEdBQ3BCLE1BQU0sZUFBZSxDQUFDO0FBR3ZCLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRSxPQUFPLEVBQUMsWUFBWSxFQUFFLGNBQWMsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDOztBQU8xRixNQVVNLGNBQWM7K0dBQWQsY0FBYzttR0FBZCxjQUFjLCtHQVJOLEVBQUU7OzRGQVFWLGNBQWM7a0JBVm5CLFNBQVM7aUNBQ00sSUFBSSxZQUNOLEVBQUUsaUJBRUcsaUJBQWlCLENBQUMsSUFBSSxtQkFDcEIsdUJBQXVCLENBQUMsTUFBTSxRQUN6Qzt3QkFDRixLQUFLLEVBQUUsV0FBVztxQkFDckI7O0FBSUwsTUFRYSxRQUFRO0lBUnJCO1FBU3FCLGFBQVEsR0FBNkIscUJBQXFCLEVBQUUsQ0FBQztRQUUzRCxZQUFPLEdBQUcsYUFBYSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRTNDLGNBQVMsR0FBRyxNQUFNLENBQzlCLE1BQU0sQ0FBQyxjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FDN0QsQ0FBQztRQUVjLFlBQU8sR0FBRyxNQUFNLENBQzVCLE1BQU0sQ0FBQyxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FDM0QsQ0FBQztLQWlCTDtJQWZHLDhCQUE4QjtJQUM5QixJQUNXLGVBQWUsQ0FBQyxDQUFPO1FBQzlCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCw4QkFBOEI7SUFDOUIsSUFDVyxhQUFhLENBQUMsQ0FBUztRQUM5QixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRVMsT0FBTyxDQUFDLElBQVU7UUFDeEIsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDbEUsQ0FBQzsrR0EzQlEsUUFBUTttR0FBUixRQUFROztTQUFSLFFBQVE7NEZBQVIsUUFBUTtrQkFScEIsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNGLFFBQVEsRUFBRSxFQUFFO3dCQUNaLHdCQUF3QixFQUFFLHNCQUFzQjt3QkFDaEQsc0JBQXNCLEVBQUUsb0JBQW9CO3FCQUMvQztpQkFDSjs4QkFnQmMsZUFBZTtzQkFEekIsS0FBSzt1QkFBQyxXQUFXO2dCQU9QLGFBQWE7c0JBRHZCLEtBQUs7dUJBQUMsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIERpcmVjdGl2ZSxcbiAgICBpbmplY3QsXG4gICAgSW5wdXQsXG4gICAgc2lnbmFsLFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHtTYWZlUmVzb3VyY2VVcmx9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHR5cGUge1R1aVN0cmluZ0hhbmRsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsvdHlwZXMnO1xuaW1wb3J0IHt0dWlXaXRoU3R5bGVzfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHtUVUlfSUNPTl9FTkQsIFRVSV9JQ09OX1NUQVJULCB0dWlJbmplY3RJY29uUmVzb2x2ZXJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5cbi8qKlxuICogV29ya2Fyb3VuZCBmb3Ige0BsaW5rIFR1aUF2YXRhcn0gdG8gcHJvcGVybHkgaGFuZGxlIGljb24gY29sb3IgaW4ge0BsaW5rIFR1aUFwcGVhcmFuY2V9XG4gKi9cbnR5cGUgSWNvbiA9IFNhZmVSZXNvdXJjZVVybCB8IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQ7XG5cbkBDb21wb25lbnQoe1xuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgdGVtcGxhdGU6ICcnLFxuICAgIHN0eWxlczogWydAaW1wb3J0IFwiQHRhaWdhLXVpL2NvcmUvc3R5bGVzL2NvbXBvbmVudHMvaWNvbnMubGVzc1wiOyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgaG9zdDoge1xuICAgICAgICBjbGFzczogJ3R1aS1pY29ucycsXG4gICAgfSxcbn0pXG5jbGFzcyBUdWlJY29uc1N0eWxlcyB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgdHVpSWNvbnM6ICcnLFxuICAgICAgICAnW3N0eWxlLi0tdC1pY29uLXN0YXJ0XSc6ICdyZXNvbHZlKGljb25TdGFydCgpKScsXG4gICAgICAgICdbc3R5bGUuLS10LWljb24tZW5kXSc6ICdyZXNvbHZlKGljb25FbmQoKSknLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUljb25zIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJlc29sdmVyOiBUdWlTdHJpbmdIYW5kbGVyPHN0cmluZz4gPSB0dWlJbmplY3RJY29uUmVzb2x2ZXIoKTtcblxuICAgIHByb3RlY3RlZCByZWFkb25seSBub3RoaW5nID0gdHVpV2l0aFN0eWxlcyhUdWlJY29uc1N0eWxlcyk7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgaWNvblN0YXJ0ID0gc2lnbmFsPEljb24+KFxuICAgICAgICBpbmplY3QoVFVJX0lDT05fU1RBUlQsIHtzZWxmOiB0cnVlLCBvcHRpb25hbDogdHJ1ZX0pIHx8ICcnLFxuICAgICk7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgaWNvbkVuZCA9IHNpZ25hbDxzdHJpbmc+KFxuICAgICAgICBpbmplY3QoVFVJX0lDT05fRU5ELCB7c2VsZjogdHJ1ZSwgb3B0aW9uYWw6IHRydWV9KSB8fCAnJyxcbiAgICApO1xuXG4gICAgLy8gVE9ETyh2NSk6IHVzZSBzaWduYWwgaW5wdXRzXG4gICAgQElucHV0KCdpY29uU3RhcnQnKVxuICAgIHB1YmxpYyBzZXQgaWNvblN0YXJ0U2V0dGVyKHg6IEljb24pIHtcbiAgICAgICAgdGhpcy5pY29uU3RhcnQuc2V0KHgpO1xuICAgIH1cblxuICAgIC8vIFRPRE8odjUpOiB1c2Ugc2lnbmFsIGlucHV0c1xuICAgIEBJbnB1dCgnaWNvbkVuZCcpXG4gICAgcHVibGljIHNldCBpY29uRW5kU2V0dGVyKHg6IHN0cmluZykge1xuICAgICAgICB0aGlzLmljb25FbmQuc2V0KHgpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCByZXNvbHZlKGljb246IEljb24pOiBzdHJpbmcgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIGljb24gPyBgdXJsKCR7dGhpcy5yZXNvbHZlcihpY29uLnRvU3RyaW5nKCkpfSlgIDogbnVsbDtcbiAgICB9XG59XG4iXX0=