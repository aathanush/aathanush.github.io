import { Directive, inject, Input, signal } from '@angular/core';
import { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_ITEMS_HANDLERS } from './items-handlers.tokens';
import * as i0 from "@angular/core";
class TuiItemsHandlersDirective {
    constructor() {
        this.defaultHandlers = inject(TUI_ITEMS_HANDLERS, {
            skipSelf: true,
        });
        this.stringify = signal(this.defaultHandlers.stringify());
        this.identityMatcher = signal(this.defaultHandlers.identityMatcher());
        this.disabledItemHandler = signal(this.defaultHandlers.disabledItemHandler());
    }
    // TODO(v5): use signal inputs
    set stringifySetter(x) {
        this.stringify.set(x);
    }
    // TODO(v5): use signal inputs
    set identityMatcherSetter(x) {
        this.identityMatcher.set(x);
    }
    // TODO(v5): use signal inputs
    set disabledItemHandlerSetter(x) {
        this.disabledItemHandler.set(x);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiItemsHandlersDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiItemsHandlersDirective, isStandalone: true, inputs: { stringifySetter: ["stringify", "stringifySetter"], identityMatcherSetter: ["identityMatcher", "identityMatcherSetter"], disabledItemHandlerSetter: ["disabledItemHandler", "disabledItemHandlerSetter"] }, providers: [tuiProvide(TUI_ITEMS_HANDLERS, TuiItemsHandlersDirective)], ngImport: i0 }); }
}
export { TuiItemsHandlersDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiItemsHandlersDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    providers: [tuiProvide(TUI_ITEMS_HANDLERS, TuiItemsHandlersDirective)],
                }]
        }], propDecorators: { stringifySetter: [{
                type: Input,
                args: ['stringify']
            }], identityMatcherSetter: [{
                type: Input,
                args: ['identityMatcher']
            }], disabledItemHandlerSetter: [{
                type: Input,
                args: ['disabledItemHandler']
            }] } });
class TuiWithItemsHandlers {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiWithItemsHandlers, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiWithItemsHandlers, isStandalone: true, hostDirectives: [{ directive: TuiItemsHandlersDirective, inputs: ["stringify", "stringify", "identityMatcher", "identityMatcher", "disabledItemHandler", "disabledItemHandler"] }], ngImport: i0 }); }
}
export { TuiWithItemsHandlers };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiWithItemsHandlers, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    hostDirectives: [
                        {
                            directive: TuiItemsHandlersDirective,
                            inputs: ['stringify', 'identityMatcher', 'disabledItemHandler'],
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbXMtaGFuZGxlcnMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9kaXJlY3RpdmVzL2l0ZW1zLWhhbmRsZXJzL2l0ZW1zLWhhbmRsZXJzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBTS9ELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUc3RCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFM0QsTUFJYSx5QkFBeUI7SUFKdEM7UUFLcUIsb0JBQWUsR0FBRyxNQUFNLENBQXNCLGtCQUFrQixFQUFFO1lBQy9FLFFBQVEsRUFBRSxJQUFJO1NBQ2pCLENBQUMsQ0FBQztRQUVhLGNBQVMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO1FBQ3JELG9CQUFlLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztRQUNqRSx3QkFBbUIsR0FBRyxNQUFNLENBQ3hDLElBQUksQ0FBQyxlQUFlLENBQUMsbUJBQW1CLEVBQUUsQ0FDN0MsQ0FBQztLQW1CTDtJQWpCRyw4QkFBOEI7SUFDOUIsSUFDVyxlQUFlLENBQUMsQ0FBc0I7UUFDN0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVELDhCQUE4QjtJQUM5QixJQUNXLHFCQUFxQixDQUFDLENBQXdCO1FBQ3JELElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCw4QkFBOEI7SUFDOUIsSUFDVyx5QkFBeUIsQ0FBQyxDQUF1QjtRQUN4RCxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7K0dBM0JRLHlCQUF5QjttR0FBekIseUJBQXlCLHNQQUZ2QixDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDOztTQUU3RCx5QkFBeUI7NEZBQXpCLHlCQUF5QjtrQkFKckMsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDLGtCQUFrQiw0QkFBNEIsQ0FBQztpQkFDekU7OEJBY2MsZUFBZTtzQkFEekIsS0FBSzt1QkFBQyxXQUFXO2dCQU9QLHFCQUFxQjtzQkFEL0IsS0FBSzt1QkFBQyxpQkFBaUI7Z0JBT2IseUJBQXlCO3NCQURuQyxLQUFLO3VCQUFDLHFCQUFxQjs7QUFNaEMsTUFTYSxvQkFBb0I7K0dBQXBCLG9CQUFvQjttR0FBcEIsb0JBQW9CLG9EQXZDcEIseUJBQXlCOztTQXVDekIsb0JBQW9COzRGQUFwQixvQkFBb0I7a0JBVGhDLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLGNBQWMsRUFBRTt3QkFDWjs0QkFDSSxTQUFTLEVBQUUseUJBQXlCOzRCQUNwQyxNQUFNLEVBQUUsQ0FBQyxXQUFXLEVBQUUsaUJBQWlCLEVBQUUscUJBQXFCLENBQUM7eUJBQ2xFO3FCQUNKO2lCQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGluamVjdCwgSW5wdXQsIHNpZ25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7XG4gICAgVHVpQm9vbGVhbkhhbmRsZXIsXG4gICAgVHVpSWRlbnRpdHlNYXRjaGVyLFxuICAgIFR1aVN0cmluZ0hhbmRsZXIsXG59IGZyb20gJ0B0YWlnYS11aS9jZGsvdHlwZXMnO1xuaW1wb3J0IHt0dWlQcm92aWRlfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuXG5pbXBvcnQgdHlwZSB7VHVpSXRlbXNIYW5kbGVyc30gZnJvbSAnLi9pdGVtcy1oYW5kbGVycy50b2tlbnMnO1xuaW1wb3J0IHtUVUlfSVRFTVNfSEFORExFUlN9IGZyb20gJy4vaXRlbXMtaGFuZGxlcnMudG9rZW5zJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBwcm92aWRlcnM6IFt0dWlQcm92aWRlKFRVSV9JVEVNU19IQU5ETEVSUywgVHVpSXRlbXNIYW5kbGVyc0RpcmVjdGl2ZSldLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlJdGVtc0hhbmRsZXJzRGlyZWN0aXZlPFQ+IGltcGxlbWVudHMgVHVpSXRlbXNIYW5kbGVyczxUPiB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBkZWZhdWx0SGFuZGxlcnMgPSBpbmplY3Q8VHVpSXRlbXNIYW5kbGVyczxUPj4oVFVJX0lURU1TX0hBTkRMRVJTLCB7XG4gICAgICAgIHNraXBTZWxmOiB0cnVlLFxuICAgIH0pO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IHN0cmluZ2lmeSA9IHNpZ25hbCh0aGlzLmRlZmF1bHRIYW5kbGVycy5zdHJpbmdpZnkoKSk7XG4gICAgcHVibGljIHJlYWRvbmx5IGlkZW50aXR5TWF0Y2hlciA9IHNpZ25hbCh0aGlzLmRlZmF1bHRIYW5kbGVycy5pZGVudGl0eU1hdGNoZXIoKSk7XG4gICAgcHVibGljIHJlYWRvbmx5IGRpc2FibGVkSXRlbUhhbmRsZXIgPSBzaWduYWwoXG4gICAgICAgIHRoaXMuZGVmYXVsdEhhbmRsZXJzLmRpc2FibGVkSXRlbUhhbmRsZXIoKSxcbiAgICApO1xuXG4gICAgLy8gVE9ETyh2NSk6IHVzZSBzaWduYWwgaW5wdXRzXG4gICAgQElucHV0KCdzdHJpbmdpZnknKVxuICAgIHB1YmxpYyBzZXQgc3RyaW5naWZ5U2V0dGVyKHg6IFR1aVN0cmluZ0hhbmRsZXI8VD4pIHtcbiAgICAgICAgdGhpcy5zdHJpbmdpZnkuc2V0KHgpO1xuICAgIH1cblxuICAgIC8vIFRPRE8odjUpOiB1c2Ugc2lnbmFsIGlucHV0c1xuICAgIEBJbnB1dCgnaWRlbnRpdHlNYXRjaGVyJylcbiAgICBwdWJsaWMgc2V0IGlkZW50aXR5TWF0Y2hlclNldHRlcih4OiBUdWlJZGVudGl0eU1hdGNoZXI8VD4pIHtcbiAgICAgICAgdGhpcy5pZGVudGl0eU1hdGNoZXIuc2V0KHgpO1xuICAgIH1cblxuICAgIC8vIFRPRE8odjUpOiB1c2Ugc2lnbmFsIGlucHV0c1xuICAgIEBJbnB1dCgnZGlzYWJsZWRJdGVtSGFuZGxlcicpXG4gICAgcHVibGljIHNldCBkaXNhYmxlZEl0ZW1IYW5kbGVyU2V0dGVyKHg6IFR1aUJvb2xlYW5IYW5kbGVyPFQ+KSB7XG4gICAgICAgIHRoaXMuZGlzYWJsZWRJdGVtSGFuZGxlci5zZXQoeCk7XG4gICAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIGhvc3REaXJlY3RpdmVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGRpcmVjdGl2ZTogVHVpSXRlbXNIYW5kbGVyc0RpcmVjdGl2ZSxcbiAgICAgICAgICAgIGlucHV0czogWydzdHJpbmdpZnknLCAnaWRlbnRpdHlNYXRjaGVyJywgJ2Rpc2FibGVkSXRlbUhhbmRsZXInXSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlXaXRoSXRlbXNIYW5kbGVycyB7fVxuIl19