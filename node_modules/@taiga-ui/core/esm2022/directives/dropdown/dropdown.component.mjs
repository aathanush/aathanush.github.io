import { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { EMPTY_CLIENT_RECT } from '@taiga-ui/cdk/constants';
import { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';
import { TuiAnimated } from '@taiga-ui/cdk/directives/animated';
import { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';
import { tuiClamp } from '@taiga-ui/cdk/utils/math';
import { tuiPx } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiPositionAccessorFor, TuiRectAccessor, tuiRectAccessorFor, } from '@taiga-ui/core/classes';
import { TuiScrollbar } from '@taiga-ui/core/components/scrollbar';
import { TuiPositionService, TuiVisualViewportService } from '@taiga-ui/core/services';
import { TUI_DARK_MODE, TUI_VIEWPORT } from '@taiga-ui/core/tokens';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import { map, takeWhile } from 'rxjs';
import { TuiDropdownDirective } from './dropdown.directive';
import { TUI_DROPDOWN_CONTEXT } from './dropdown.providers';
import { TUI_DROPDOWN_OPTIONS } from './dropdown-options.directive';
import { TuiDropdownPosition } from './dropdown-position.directive';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/directives/active-zone";
import * as i2 from "@taiga-ui/cdk/directives/animated";
/**
 * @description:
 * This component is used to show template in a portal
 * using default style of white rounded box with a shadow
 */
class TuiDropdownComponent {
    constructor() {
        this.el = tuiInjectElement();
        this.accessor = inject(TuiRectAccessor);
        this.viewport = inject(TUI_VIEWPORT);
        this.vvs = inject(TuiVisualViewportService);
        this.styles$ = inject(TuiPositionService).pipe(takeWhile(() => this.directive.el.isConnected &&
            !!this.directive.el.getBoundingClientRect().height), map((v) => (this.directive.position === 'fixed' ? this.vvs.correct(v) : v)), map(([top, left]) => this.getStyles(left, top)), takeUntilDestroyed());
        this.options = inject(TUI_DROPDOWN_OPTIONS);
        this.directive = inject(TuiDropdownDirective);
        this.context = inject(TUI_DROPDOWN_CONTEXT, { optional: true });
        this.darkMode = inject(TUI_DARK_MODE);
        this.position = this.directive.position;
        this.theme = computed((_ = this.darkMode()) => this.directive.el.closest('[tuiTheme]')?.getAttribute('tuiTheme'));
        this.close = () => this.directive.toggle(false);
    }
    ngAfterViewInit() {
        this.styles$.subscribe({
            next: (styles) => Object.assign(this.el.style, styles),
            complete: () => this.close?.(),
        });
    }
    getStyles(x, y) {
        const { maxHeight, minHeight, offset, limitWidth } = this.options;
        const parent = this.el.offsetParent?.getBoundingClientRect() || EMPTY_CLIENT_RECT;
        const { left = 0, top = 0 } = this.position === 'fixed' ? {} : parent;
        const rect = this.accessor.getClientRect();
        const viewport = this.viewport.getClientRect();
        const above = rect.top - viewport.top - 2 * offset;
        const below = viewport.top + viewport.height - y - offset;
        const available = y > rect.bottom ? below : above;
        const height = this.el.getBoundingClientRect().right <= rect.left || x >= rect.right
            ? maxHeight
            : tuiClamp(available, minHeight, maxHeight);
        y -= top;
        x -= left;
        return {
            position: this.position,
            top: tuiPx(Math.round(Math.max(y, offset - top))),
            left: tuiPx(Math.round(x)),
            maxHeight: tuiPx(Math.round(height)),
            width: limitWidth === 'fixed' ? tuiPx(Math.round(rect.width)) : '',
            minWidth: limitWidth === 'min' ? tuiPx(Math.round(rect.width)) : '',
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDropdownComponent, isStandalone: true, selector: "tui-dropdown", host: { properties: { "attr.data-appearance": "options.appearance", "attr.tuiTheme": "theme()" } }, providers: [
            TuiPositionService,
            tuiPositionAccessorFor('dropdown', TuiDropdownPosition),
            tuiRectAccessorFor('dropdown', TuiDropdownDirective),
        ], hostDirectives: [{ directive: i1.TuiActiveZone }, { directive: i2.TuiAnimated }], ngImport: i0, template: "<tui-scrollbar class=\"t-scroll\">\n    <div\n        *polymorpheusOutlet=\"directive.content as text; context: {$implicit: close}\"\n        class=\"t-primitive\"\n    >\n        {{ text }}\n    </div>\n</tui-scrollbar>\n", styles: [":host{position:absolute;display:flex;box-shadow:var(--tui-shadow-medium);color:var(--tui-text-primary);background:var(--tui-background-elevation-3);border-radius:var(--tui-radius-m);overflow:hidden;border:1px solid var(--tui-border-normal);box-sizing:border-box;max-inline-size:calc(100% - 8px);isolation:isolate;pointer-events:auto;--tui-from: translateY(-1rem)}:host.tui-enter,:host.tui-leave{animation-name:tuiFade,tuiSlide}:host:not([style*=top]){visibility:hidden}.t-scroll{flex-grow:1;max-inline-size:100%;inline-size:-webkit-max-content;inline-size:max-content;overscroll-behavior:none}.t-primitive{padding:1rem}\n"], dependencies: [{ kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "component", type: TuiScrollbar, selector: "tui-scrollbar", inputs: ["hidden"] }], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
export { TuiDropdownComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDropdownComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-dropdown', imports: [PolymorpheusOutlet, TuiScrollbar], changeDetection: ChangeDetectionStrategy.Default, providers: [
                        TuiPositionService,
                        tuiPositionAccessorFor('dropdown', TuiDropdownPosition),
                        tuiRectAccessorFor('dropdown', TuiDropdownDirective),
                    ], hostDirectives: [TuiActiveZone, TuiAnimated], host: {
                        '[attr.data-appearance]': 'options.appearance',
                        '[attr.tuiTheme]': 'theme()',
                    }, template: "<tui-scrollbar class=\"t-scroll\">\n    <div\n        *polymorpheusOutlet=\"directive.content as text; context: {$implicit: close}\"\n        class=\"t-primitive\"\n    >\n        {{ text }}\n    </div>\n</tui-scrollbar>\n", styles: [":host{position:absolute;display:flex;box-shadow:var(--tui-shadow-medium);color:var(--tui-text-primary);background:var(--tui-background-elevation-3);border-radius:var(--tui-radius-m);overflow:hidden;border:1px solid var(--tui-border-normal);box-sizing:border-box;max-inline-size:calc(100% - 8px);isolation:isolate;pointer-events:auto;--tui-from: translateY(-1rem)}:host.tui-enter,:host.tui-leave{animation-name:tuiFade,tuiSlide}:host:not([style*=top]){visibility:hidden}.t-scroll{flex-grow:1;max-inline-size:100%;inline-size:-webkit-max-content;inline-size:max-content;overscroll-behavior:none}.t-primitive{padding:1rem}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,