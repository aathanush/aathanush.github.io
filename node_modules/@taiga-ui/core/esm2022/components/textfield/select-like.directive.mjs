import { ChangeDetectionStrategy, Component, Directive, inject, ViewEncapsulation, } from '@angular/core';
import { TUI_IS_ANDROID } from '@taiga-ui/cdk/tokens';
import { tuiWithStyles } from '@taiga-ui/cdk/utils/miscellaneous';
import * as i0 from "@angular/core";
class TuiSelectLikeStyles {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSelectLikeStyles, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiSelectLikeStyles, isStandalone: true, selector: "ng-component", host: { classAttribute: "tui-select-like" }, ngImport: i0, template: '', isInline: true, styles: [".t-select-like:not(:read-only){cursor:pointer}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSelectLikeStyles, decorators: [{
            type: Component,
            args: [{ standalone: true, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        class: 'tui-select-like',
                    }, styles: [".t-select-like:not(:read-only){cursor:pointer}\n"] }]
        }] });
class TuiSelectLike {
    constructor() {
        this.isAndroid = inject(TUI_IS_ANDROID);
        this.nothing = tuiWithStyles(TuiSelectLikeStyles);
    }
    clear(element) {
        element.value = '';
    }
    prevent(event, element) {
        if (this.isAndroid) {
            event.preventDefault();
            element.focus();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSelectLike, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiSelectLike, isStandalone: true, host: { attributes: { "inputmode": "none", "spellcheck": "false", "autocomplete": "off" }, listeners: { "beforeinput": "$event.inputType.includes(\"delete\") || $event.preventDefault()", "input.capture": "$event.inputType?.includes(\"delete\") && clear($event.target)", "mousedown": "prevent($event, $event.target)" }, classAttribute: "t-select-like" }, ngImport: i0 }); }
}
export { TuiSelectLike };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSelectLike, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    host: {
                        class: 't-select-like',
                        inputmode: 'none',
                        spellcheck: 'false',
                        autocomplete: 'off',
                        // Click on cleaner icon does not trigger `beforeinput` event --> handle all kind of deletion in input event
                        '(beforeinput)': '$event.inputType.includes("delete") || $event.preventDefault()',
                        '(input.capture)': '$event.inputType?.includes("delete") && clear($event.target)',
                        // Hide Android text select handle (bubble marker below transparent caret)
                        '(mousedown)': 'prevent($event, $event.target)',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWxpa2UuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9jb21wb25lbnRzL3RleHRmaWVsZC9zZWxlY3QtbGlrZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsU0FBUyxFQUNULE1BQU0sRUFDTixpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQzs7QUFFaEUsTUFVTSxtQkFBbUI7K0dBQW5CLG1CQUFtQjttR0FBbkIsbUJBQW1CLHFIQVJYLEVBQUU7OzRGQVFWLG1CQUFtQjtrQkFWeEIsU0FBUztpQ0FDTSxJQUFJLFlBQ04sRUFBRSxpQkFFRyxpQkFBaUIsQ0FBQyxJQUFJLG1CQUNwQix1QkFBdUIsQ0FBQyxNQUFNLFFBQ3pDO3dCQUNGLEtBQUssRUFBRSxpQkFBaUI7cUJBQzNCOztBQUlMLE1BY2EsYUFBYTtJQWQxQjtRQWVxQixjQUFTLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2pDLFlBQU8sR0FBRyxhQUFhLENBQUMsbUJBQW1CLENBQUMsQ0FBQztLQVluRTtJQVZhLEtBQUssQ0FBQyxPQUF5QjtRQUNyQyxPQUFPLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRVMsT0FBTyxDQUFDLEtBQWlCLEVBQUUsT0FBeUI7UUFDMUQsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDbkI7SUFDTCxDQUFDOytHQWJRLGFBQWE7bUdBQWIsYUFBYTs7U0FBYixhQUFhOzRGQUFiLGFBQWE7a0JBZHpCLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLElBQUksRUFBRTt3QkFDRixLQUFLLEVBQUUsZUFBZTt3QkFDdEIsU0FBUyxFQUFFLE1BQU07d0JBQ2pCLFVBQVUsRUFBRSxPQUFPO3dCQUNuQixZQUFZLEVBQUUsS0FBSzt3QkFDbkIsNEdBQTRHO3dCQUM1RyxlQUFlLEVBQUUsZ0VBQWdFO3dCQUNqRixpQkFBaUIsRUFBRSw4REFBOEQ7d0JBQ2pGLDBFQUEwRTt3QkFDMUUsYUFBYSxFQUFFLGdDQUFnQztxQkFDbEQ7aUJBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBEaXJlY3RpdmUsXG4gICAgaW5qZWN0LFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VFVJX0lTX0FORFJPSUR9IGZyb20gJ0B0YWlnYS11aS9jZGsvdG9rZW5zJztcbmltcG9ydCB7dHVpV2l0aFN0eWxlc30gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICB0ZW1wbGF0ZTogJycsXG4gICAgc3R5bGVzOiBbJy50LXNlbGVjdC1saWtlOm5vdCg6cmVhZC1vbmx5KSB7Y3Vyc29yOiBwb2ludGVyfSddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgaG9zdDoge1xuICAgICAgICBjbGFzczogJ3R1aS1zZWxlY3QtbGlrZScsXG4gICAgfSxcbn0pXG5jbGFzcyBUdWlTZWxlY3RMaWtlU3R5bGVzIHt9XG5cbkBEaXJlY3RpdmUoe1xuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaG9zdDoge1xuICAgICAgICBjbGFzczogJ3Qtc2VsZWN0LWxpa2UnLFxuICAgICAgICBpbnB1dG1vZGU6ICdub25lJyxcbiAgICAgICAgc3BlbGxjaGVjazogJ2ZhbHNlJyxcbiAgICAgICAgYXV0b2NvbXBsZXRlOiAnb2ZmJyxcbiAgICAgICAgLy8gQ2xpY2sgb24gY2xlYW5lciBpY29uIGRvZXMgbm90IHRyaWdnZXIgYGJlZm9yZWlucHV0YCBldmVudCAtLT4gaGFuZGxlIGFsbCBraW5kIG9mIGRlbGV0aW9uIGluIGlucHV0IGV2ZW50XG4gICAgICAgICcoYmVmb3JlaW5wdXQpJzogJyRldmVudC5pbnB1dFR5cGUuaW5jbHVkZXMoXCJkZWxldGVcIikgfHwgJGV2ZW50LnByZXZlbnREZWZhdWx0KCknLFxuICAgICAgICAnKGlucHV0LmNhcHR1cmUpJzogJyRldmVudC5pbnB1dFR5cGU/LmluY2x1ZGVzKFwiZGVsZXRlXCIpICYmIGNsZWFyKCRldmVudC50YXJnZXQpJyxcbiAgICAgICAgLy8gSGlkZSBBbmRyb2lkIHRleHQgc2VsZWN0IGhhbmRsZSAoYnViYmxlIG1hcmtlciBiZWxvdyB0cmFuc3BhcmVudCBjYXJldClcbiAgICAgICAgJyhtb3VzZWRvd24pJzogJ3ByZXZlbnQoJGV2ZW50LCAkZXZlbnQudGFyZ2V0KScsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpU2VsZWN0TGlrZSB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBpc0FuZHJvaWQgPSBpbmplY3QoVFVJX0lTX0FORFJPSUQpO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBub3RoaW5nID0gdHVpV2l0aFN0eWxlcyhUdWlTZWxlY3RMaWtlU3R5bGVzKTtcblxuICAgIHByb3RlY3RlZCBjbGVhcihlbGVtZW50OiBIVE1MSW5wdXRFbGVtZW50KTogdm9pZCB7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSAnJztcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcHJldmVudChldmVudDogTW91c2VFdmVudCwgZWxlbWVudDogSFRNTElucHV0RWxlbWVudCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5pc0FuZHJvaWQpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=