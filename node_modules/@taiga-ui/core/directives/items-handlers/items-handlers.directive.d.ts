import type { TuiBooleanHandler, TuiIdentityMatcher, TuiStringHandler } from '@taiga-ui/cdk/types';
import type { TuiItemsHandlers } from './items-handlers.tokens';
import * as i0 from "@angular/core";
export declare class TuiItemsHandlersDirective<T> implements TuiItemsHandlers<T> {
    private readonly defaultHandlers;
    readonly stringify: import("@angular/core").WritableSignal<TuiStringHandler<T>>;
    readonly identityMatcher: import("@angular/core").WritableSignal<TuiIdentityMatcher<T>>;
    readonly disabledItemHandler: import("@angular/core").WritableSignal<TuiBooleanHandler<T>>;
    set stringifySetter(x: TuiStringHandler<T>);
    set identityMatcherSetter(x: TuiIdentityMatcher<T>);
    set disabledItemHandlerSetter(x: TuiBooleanHandler<T>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiItemsHandlersDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiItemsHandlersDirective<any>, never, never, { "stringifySetter": { "alias": "stringify"; "required": false; }; "identityMatcherSetter": { "alias": "identityMatcher"; "required": false; }; "disabledItemHandlerSetter": { "alias": "disabledItemHandler"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class TuiWithItemsHandlers {
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiWithItemsHandlers, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiWithItemsHandlers, never, never, {}, {}, never, never, true, [{ directive: typeof TuiItemsHandlersDirective; inputs: { "stringify": "stringify"; "identityMatcher": "identityMatcher"; "disabledItemHandler": "disabledItemHandler"; }; outputs: {}; }]>;
}
