import { Directive } from '@angular/core';
import { NG_VALIDATORS, Validators } from '@angular/forms';
import { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';
import { tuiProvide } from '@taiga-ui/cdk/utils';
import * as i0 from "@angular/core";
class TuiValidator {
    constructor() {
        this.onChange = EMPTY_FUNCTION;
        this.validate = Validators.nullValidator;
    }
    registerOnValidatorChange(onChange) {
        this.onChange = onChange;
    }
    ngOnChanges() {
        this.onChange();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiValidator, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiValidator, isStandalone: true, selector: "[tuiValidator]", inputs: { validate: ["tuiValidator", "validate"] }, providers: [tuiProvide(NG_VALIDATORS, TuiValidator, true)], usesOnChanges: true, ngImport: i0 }); }
}
export { TuiValidator };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiValidator, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[tuiValidator]',
                    inputs: ['validate: tuiValidator'],
                    providers: [tuiProvide(NG_VALIDATORS, TuiValidator, true)],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdG9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkay9kaXJlY3RpdmVzL3ZhbGlkYXRvci92YWxpZGF0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEMsT0FBTyxFQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHFCQUFxQixDQUFDOztBQUUvQyxNQU1hLFlBQVk7SUFOekI7UUFPYyxhQUFRLEdBQUcsY0FBYyxDQUFDO1FBRTdCLGFBQVEsR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDO0tBUzlDO0lBUFUseUJBQXlCLENBQUMsUUFBa0M7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVNLFdBQVc7UUFDZCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDcEIsQ0FBQzsrR0FYUSxZQUFZO21HQUFaLFlBQVksaUhBRlYsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQzs7U0FFakQsWUFBWTs0RkFBWixZQUFZO2tCQU54QixTQUFTO21CQUFDO29CQUNQLFVBQVUsRUFBRSxJQUFJO29CQUNoQixRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixNQUFNLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQztvQkFDbEMsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDLGFBQWEsZ0JBQWdCLElBQUksQ0FBQyxDQUFDO2lCQUM3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtPbkNoYW5nZXN9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtEaXJlY3RpdmV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUge1ZhbGlkYXRvcn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtOR19WQUxJREFUT1JTLCBWYWxpZGF0b3JzfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge0VNUFRZX0ZVTkNUSU9OfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2NvbnN0YW50cyc7XG5pbXBvcnQge3R1aVByb3ZpZGV9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAnW3R1aVZhbGlkYXRvcl0nLFxuICAgIGlucHV0czogWyd2YWxpZGF0ZTogdHVpVmFsaWRhdG9yJ10sXG4gICAgcHJvdmlkZXJzOiBbdHVpUHJvdmlkZShOR19WQUxJREFUT1JTLCBUdWlWYWxpZGF0b3IsIHRydWUpXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVmFsaWRhdG9yIGltcGxlbWVudHMgVmFsaWRhdG9yLCBPbkNoYW5nZXMge1xuICAgIHByb3RlY3RlZCBvbkNoYW5nZSA9IEVNUFRZX0ZVTkNUSU9OO1xuXG4gICAgcHVibGljIHZhbGlkYXRlID0gVmFsaWRhdG9ycy5udWxsVmFsaWRhdG9yO1xuXG4gICAgcHVibGljIHJlZ2lzdGVyT25WYWxpZGF0b3JDaGFuZ2Uob25DaGFuZ2U6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHZvaWQge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gb25DaGFuZ2U7XG4gICAgfVxuXG4gICAgcHVibGljIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlKCk7XG4gICAgfVxufVxuIl19