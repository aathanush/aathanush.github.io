import { isPlatformBrowser } from '@angular/common';
import { DestroyRef, Directive, inject, PLATFORM_ID } from '@angular/core';
import { WA_WINDOW } from '@ng-web-apis/common';
import { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';
import { tuiCreateToken, tuiFontSizeWatcher } from '@taiga-ui/cdk/utils/miscellaneous';
import * as i0 from "@angular/core";
export const TUI_FONT_SIZE_HANDLER = tuiCreateToken();
class TuiFontSize {
    constructor() {
        this.handler = inject(TUI_FONT_SIZE_HANDLER, { optional: true });
        this.nothing = inject(DestroyRef).onDestroy(this.handler &&
            isPlatformBrowser(inject(PLATFORM_ID)) &&
            typeof ResizeObserver !== 'undefined'
            ? tuiFontSizeWatcher(this.handler, inject(WA_WINDOW))
            : EMPTY_FUNCTION);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiFontSize, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiFontSize, isStandalone: true, ngImport: i0 }); }
}
export { TuiFontSize };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiFontSize, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9udC1zaXplLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkay9kaXJlY3RpdmVzL2ZvbnQtc2l6ZS9mb250LXNpemUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sRUFBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsY0FBYyxFQUFFLGtCQUFrQixFQUFDLE1BQU0sbUNBQW1DLENBQUM7O0FBRXJGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLGNBQWMsRUFBMEIsQ0FBQztBQUU5RSxNQUdhLFdBQVc7SUFIeEI7UUFJcUIsWUFBTyxHQUFHLE1BQU0sQ0FBQyxxQkFBcUIsRUFBRSxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO1FBQ3hELFlBQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsU0FBUyxDQUNyRCxJQUFJLENBQUMsT0FBTztZQUNSLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUN0QyxPQUFPLGNBQWMsS0FBSyxXQUFXO1lBQ3JDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNyRCxDQUFDLENBQUMsY0FBYyxDQUN2QixDQUFDO0tBQ0w7K0dBVFksV0FBVzttR0FBWCxXQUFXOztTQUFYLFdBQVc7NEZBQVgsV0FBVztrQkFIdkIsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsSUFBSTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2lzUGxhdGZvcm1Ccm93c2VyfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtEZXN0cm95UmVmLCBEaXJlY3RpdmUsIGluamVjdCwgUExBVEZPUk1fSUR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtXQV9XSU5ET1d9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtFTVBUWV9GVU5DVElPTn0gZnJvbSAnQHRhaWdhLXVpL2Nkay9jb25zdGFudHMnO1xuaW1wb3J0IHt0dWlDcmVhdGVUb2tlbiwgdHVpRm9udFNpemVXYXRjaGVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX0ZPTlRfU0laRV9IQU5ETEVSID0gdHVpQ3JlYXRlVG9rZW48KHNpemU6IG51bWJlcikgPT4gdm9pZD4oKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRm9udFNpemUge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgaGFuZGxlciA9IGluamVjdChUVUlfRk9OVF9TSVpFX0hBTkRMRVIsIHtvcHRpb25hbDogdHJ1ZX0pO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBub3RoaW5nID0gaW5qZWN0KERlc3Ryb3lSZWYpLm9uRGVzdHJveShcbiAgICAgICAgdGhpcy5oYW5kbGVyICYmXG4gICAgICAgICAgICBpc1BsYXRmb3JtQnJvd3NlcihpbmplY3QoUExBVEZPUk1fSUQpKSAmJlxuICAgICAgICAgICAgdHlwZW9mIFJlc2l6ZU9ic2VydmVyICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyB0dWlGb250U2l6ZVdhdGNoZXIodGhpcy5oYW5kbGVyLCBpbmplY3QoV0FfV0lORE9XKSlcbiAgICAgICAgICAgIDogRU1QVFlfRlVOQ1RJT04sXG4gICAgKTtcbn1cbiJdfQ==